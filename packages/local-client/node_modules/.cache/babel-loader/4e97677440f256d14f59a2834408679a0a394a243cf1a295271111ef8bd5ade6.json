{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maya\\\\Desktop\\\\AWT\\\\podokumentowane\\\\podokumentowane\\\\packages\\\\local-client\\\\src\\\\components\\\\code-editor.tsx\",\n  _s = $RefreshSig$();\nimport './code-editor.css';\nimport { useRef } from 'react';\nimport MonacoEditor from '@monaco-editor/react';\nimport prettier from 'prettier';\nimport parser from 'prettier/parser-babel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = _ref => {\n  _s();\n  let {\n    onChange,\n    initialValue\n  } = _ref;\n  const editorRef = useRef();\n  const onEditorDidMount = (getValue, monacoEditor) => {\n    var _monacoEditor$getMode;\n    editorRef.current = monacoEditor;\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n    (_monacoEditor$getMode = monacoEditor.getModel()) === null || _monacoEditor$getMode === void 0 ? void 0 : _monacoEditor$getMode.updateOptions({\n      tabSize: 2\n    });\n  };\n  const onFormatClick = () => {\n    //get current value from editor\n    const unformatted = editorRef.current.getModel().getValue();\n\n    //format that value\n    const formatted = prettier.format(unformatted, {\n      parser: 'babel',\n      plugins: [parser],\n      useTabs: false,\n      semi: true,\n      singleQuote: true\n    }).replace(/\\n$/, '');\n\n    //set the formatted value back in the editor\n    editorRef.current.setValue(formatted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button-format is-primary is-small\",\n      onClick: onFormatClick,\n      children: \"Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MonacoEditor, {\n      editorDidMount: onEditorDidMount,\n      value: initialValue,\n      theme: \"dark\",\n      language: \"javascript\",\n      height: \"100%\",\n      options: {\n        wordWrap: \"on\",\n        minimap: {\n          enabled: false\n        },\n        showUnused: false,\n        folding: false,\n        lineNumbersMinChars: 3,\n        fontSize: 16,\n        scrollBeyondLastLine: false,\n        automaticLayout: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["useRef","MonacoEditor","prettier","parser","jsxDEV","_jsxDEV","CodeEditor","_ref","_s","onChange","initialValue","editorRef","onEditorDidMount","getValue","monacoEditor","_monacoEditor$getMode","current","onDidChangeModelContent","getModel","updateOptions","tabSize","onFormatClick","unformatted","formatted","format","plugins","useTabs","semi","singleQuote","replace","setValue","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","editorDidMount","value","theme","language","height","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","_c","$RefreshReg$"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/src/components/code-editor.tsx"],"sourcesContent":["import './code-editor.css';\r\nimport { useRef } from 'react';\r\nimport MonacoEditor, {EditorDidMount} from '@monaco-editor/react';\r\nimport prettier from 'prettier';\r\nimport parser from 'prettier/parser-babel';\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void;\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({onChange, initialValue}) => {\r\n  const editorRef = useRef<any>();\r\n  \r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor;\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue());\r\n    });\r\n\r\n    monacoEditor.getModel()?.updateOptions({tabSize: 2});\r\n  };\r\n\r\n  const onFormatClick = () => {\r\n    //get current value from editor\r\n    const unformatted = editorRef.current.getModel().getValue();\r\n\r\n    //format that value\r\n    const formatted = prettier.format(unformatted, {\r\n      parser: 'babel',\r\n      plugins: [parser],\r\n      useTabs: false,\r\n      semi: true,\r\n      singleQuote: true\r\n    }).replace(/\\n$/, '');\r\n\r\n    //set the formatted value back in the editor\r\n    editorRef.current.setValue(formatted);\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <button  \r\n        className=\"button button-format is-primary is-small\" \r\n        onClick={onFormatClick}>\r\n          Format\r\n        </button>\r\n      <MonacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        theme='dark'\r\n        language='javascript'\r\n        height=\"100%\"\r\n        options={{\r\n          wordWrap:\"on\",\r\n          minimap: {enabled: false},\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CodeEditor;"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,YAAY,MAAwB,sBAAsB;AACjE,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3C,MAAMC,UAAqC,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAACC,QAAQ;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACrE,MAAMI,SAAS,GAAGX,MAAM,EAAO;EAE/B,MAAMY,gBAAgC,GAAGA,CAACC,QAAQ,EAAEC,YAAY,KAAK;IAAA,IAAAC,qBAAA;IACnEJ,SAAS,CAACK,OAAO,GAAGF,YAAY;IAChCA,YAAY,CAACG,uBAAuB,CAAC,MAAM;MACzCR,QAAQ,CAACI,QAAQ,EAAE,CAAC;IACtB,CAAC,CAAC;IAEF,CAAAE,qBAAA,GAAAD,YAAY,CAACI,QAAQ,EAAE,cAAAH,qBAAA,uBAAvBA,qBAAA,CAAyBI,aAAa,CAAC;MAACC,OAAO,EAAE;IAAC,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,MAAMC,WAAW,GAAGX,SAAS,CAACK,OAAO,CAACE,QAAQ,EAAE,CAACL,QAAQ,EAAE;;IAE3D;IACA,MAAMU,SAAS,GAAGrB,QAAQ,CAACsB,MAAM,CAACF,WAAW,EAAE;MAC7CnB,MAAM,EAAE,OAAO;MACfsB,OAAO,EAAE,CAACtB,MAAM,CAAC;MACjBuB,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;;IAErB;IACAlB,SAAS,CAACK,OAAO,CAACc,QAAQ,CAACP,SAAS,CAAC;EACvC,CAAC;EAED,oBACElB,OAAA;IAAK0B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B3B,OAAA;MACE0B,SAAS,EAAC,0CAA0C;MACpDE,OAAO,EAAEZ,aAAc;MAAAW,QAAA,EAAC;IAExB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACXhC,OAAA,CAACJ,YAAY;MACXqC,cAAc,EAAE1B,gBAAiB;MACjC2B,KAAK,EAAE7B,YAAa;MACpB8B,KAAK,EAAC,MAAM;MACZC,QAAQ,EAAC,YAAY;MACrBC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAE;QACPC,QAAQ,EAAC,IAAI;QACbC,OAAO,EAAE;UAACC,OAAO,EAAE;QAAK,CAAC;QACzBC,UAAU,EAAE,KAAK;QACjBC,OAAO,EAAE,KAAK;QACdC,mBAAmB,EAAE,CAAC;QACtBC,QAAQ,EAAE,EAAE;QACZC,oBAAoB,EAAE,KAAK;QAC3BC,eAAe,EAAE;MACnB;IAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAC7B,EAAA,CAvDIF,UAAqC;AAAA+C,EAAA,GAArC/C,UAAqC;AA2D3C,eAAeA,UAAU;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}