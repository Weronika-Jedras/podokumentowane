{"ast":null,"code":"Prism.languages.aql = {\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n  'property': {\n    pattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /([\"'´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n    greedy: true\n  },\n  'variable': /@@?\\w+/,\n  'keyword': [{\n    pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n    lookbehind: true\n  }, /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\n  // pseudo keywords get a lookbehind to avoid false positives\n  {\n    pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /\\bOPTIONS(?=\\s*\\{)/i\n  }],\n  'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'range': {\n    pattern: /\\.\\./,\n    alias: 'operator'\n  },\n  'number': [/\\b0b[01]+/i, /\\b0x[0-9a-f]+/i, /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i],\n  'operator': /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n  'punctuation': /::|[?.:,;()[\\]{}]/\n};","map":{"version":3,"names":["Prism","languages","aql","pattern","lookbehind","greedy","alias"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-aql.js"],"sourcesContent":["Prism.languages.aql = {\r\n\t'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n\t'property': {\r\n\t\tpattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /([\"'´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'variable': /@@?\\w+/,\r\n\t'keyword': [\r\n\t\t{\r\n\t\t\tpattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t/\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\r\n\t\t// pseudo keywords get a lookbehind to avoid false positives\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /\\bOPTIONS(?=\\s*\\{)/i\r\n\t\t}\r\n\t],\r\n\t'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\r\n\t'boolean': /\\b(?:true|false)\\b/i,\r\n\t'range': {\r\n\t\tpattern: /\\.\\./,\r\n\t\talias: 'operator'\r\n\t},\r\n\t'number': [\r\n\t\t/\\b0b[01]+/i,\r\n\t\t/\\b0x[0-9a-f]+/i,\r\n\t\t/(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\r\n\t],\r\n\t'operator': /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\r\n\t'punctuation': /::|[?.:,;()[\\]{}]/\r\n};\r\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,GAAG,GAAG;EACrB,SAAS,EAAE,yBAAyB;EACpC,UAAU,EAAE;IACXC,OAAO,EAAE,mEAAmE;IAC5EC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;EACT,CAAC;EACD,QAAQ,EAAE;IACTF,OAAO,EAAE,oCAAoC;IAC7CE,MAAM,EAAE;EACT,CAAC;EACD,UAAU,EAAE,QAAQ;EACpB,SAAS,EAAE,CACV;IACCF,OAAO,EAAE,gCAAgC;IACzCC,UAAU,EAAE;EACb,CAAC,EACD,uOAAuO;EACvO;EACA;IACCD,OAAO,EAAE,wCAAwC;IACjDC,UAAU,EAAE;EACb,CAAC,EACD;IACCD,OAAO,EAAE,kCAAkC;IAC3CC,UAAU,EAAE;EACb,CAAC,EACD;IACCD,OAAO,EAAE;EACV,CAAC,CACD;EACD,UAAU,EAAE,sBAAsB;EAClC,SAAS,EAAE,qBAAqB;EAChC,OAAO,EAAE;IACRA,OAAO,EAAE,MAAM;IACfG,KAAK,EAAE;EACR,CAAC;EACD,QAAQ,EAAE,CACT,YAAY,EACZ,gBAAgB,EAChB,uDAAuD,CACvD;EACD,UAAU,EAAE,uCAAuC;EACnD,aAAa,EAAE;AAChB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}