{"ast":null,"code":"(function (Prism) {\n  var specialEscape = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: 'escape'\n  };\n  var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/;\n  var charClass = {\n    pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n    alias: 'class-name'\n  };\n  var charClassWithoutDot = {\n    pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n    alias: 'class-name'\n  };\n  var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n  var range = RegExp(rangeChar + '-' + rangeChar);\n\n  // the name of a capturing group\n  var groupName = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: true,\n    alias: 'variable'\n  };\n  Prism.languages.regex = {\n    'charset': {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: true,\n      inside: {\n        'charset-negation': {\n          pattern: /(^\\[)\\^/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        'charset-punctuation': {\n          pattern: /^\\[|\\]$/,\n          alias: 'punctuation'\n        },\n        'range': {\n          pattern: range,\n          inside: {\n            'escape': escape,\n            'range-punctuation': {\n              pattern: /-/,\n              alias: 'operator'\n            }\n          }\n        },\n        'special-escape': specialEscape,\n        'charclass': charClassWithoutDot,\n        'escape': escape\n      }\n    },\n    'special-escape': specialEscape,\n    'charclass': charClass,\n    'backreference': [{\n      // a backreference which is not an octal escape\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: 'keyword'\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: 'keyword',\n      inside: {\n        'group-name': groupName\n      }\n    }],\n    'anchor': {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: 'function'\n    },\n    'escape': escape,\n    'group': [{\n      // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n      // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n      // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: 'punctuation',\n      inside: {\n        'group-name': groupName\n      }\n    }, {\n      pattern: /\\)/,\n      alias: 'punctuation'\n    }],\n    'quantifier': {\n      pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n      alias: 'number'\n    },\n    'alternation': {\n      pattern: /\\|/,\n      alias: 'keyword'\n    }\n  };\n})(Prism);","map":{"version":3,"names":["Prism","specialEscape","pattern","alias","escape","charClass","charClassWithoutDot","rangeChar","source","range","RegExp","groupName","lookbehind","languages","regex","inside"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-regex.js"],"sourcesContent":["(function (Prism) {\r\n\r\n\tvar specialEscape = {\r\n\t\tpattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\r\n\t\talias: 'escape'\r\n\t};\r\n\tvar escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/;\r\n\tvar charClass = {\r\n\t\tpattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\r\n\t\talias: 'class-name'\r\n\t};\r\n\tvar charClassWithoutDot = {\r\n\t\tpattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\r\n\t\talias: 'class-name'\r\n\t};\r\n\r\n\tvar rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\r\n\tvar range = RegExp(rangeChar + '-' + rangeChar);\r\n\r\n\t// the name of a capturing group\r\n\tvar groupName = {\r\n\t\tpattern: /(<|')[^<>']+(?=[>']$)/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'variable'\r\n\t};\r\n\r\n\tPrism.languages.regex = {\r\n\t\t'charset': {\r\n\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'charset-negation': {\r\n\t\t\t\t\tpattern: /(^\\[)\\^/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'operator'\r\n\t\t\t\t},\r\n\t\t\t\t'charset-punctuation': {\r\n\t\t\t\t\tpattern: /^\\[|\\]$/,\r\n\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t},\r\n\t\t\t\t'range': {\r\n\t\t\t\t\tpattern: range,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'escape': escape,\r\n\t\t\t\t\t\t'range-punctuation': {\r\n\t\t\t\t\t\t\tpattern: /-/,\r\n\t\t\t\t\t\t\talias: 'operator'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'special-escape': specialEscape,\r\n\t\t\t\t'charclass': charClassWithoutDot,\r\n\t\t\t\t'escape': escape\r\n\t\t\t}\r\n\t\t},\r\n\t\t'special-escape': specialEscape,\r\n\t\t'charclass': charClass,\r\n\t\t'backreference': [\r\n\t\t\t{\r\n\t\t\t\t// a backreference which is not an octal escape\r\n\t\t\t\tpattern: /\\\\(?![123][0-7]{2})[1-9]/,\r\n\t\t\t\talias: 'keyword'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /\\\\k<[^<>']+>/,\r\n\t\t\t\talias: 'keyword',\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'group-name': groupName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t'anchor': {\r\n\t\t\tpattern: /[$^]|\\\\[ABbGZz]/,\r\n\t\t\talias: 'function'\r\n\t\t},\r\n\t\t'escape': escape,\r\n\t\t'group': [\r\n\t\t\t{\r\n\t\t\t\t// https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\r\n\t\t\t\t// https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\r\n\r\n\t\t\t\t// (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\r\n\t\t\t\tpattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\r\n\t\t\t\talias: 'punctuation',\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'group-name': groupName\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /\\)/,\r\n\t\t\t\talias: 'punctuation'\r\n\t\t\t}\r\n\t\t],\r\n\t\t'quantifier': {\r\n\t\t\tpattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\r\n\t\t\talias: 'number'\r\n\t\t},\r\n\t\t'alternation': {\r\n\t\t\tpattern: /\\|/,\r\n\t\t\talias: 'keyword'\r\n\t\t}\r\n\t};\r\n\r\n}(Prism));\r\n"],"mappings":"AAAC,WAAUA,KAAK,EAAE;EAEjB,IAAIC,aAAa,GAAG;IACnBC,OAAO,EAAE,sBAAsB;IAC/BC,KAAK,EAAE;EACR,CAAC;EACD,IAAIC,MAAM,GAAG,4FAA4F;EACzG,IAAIC,SAAS,GAAG;IACfH,OAAO,EAAE,2BAA2B;IACpCC,KAAK,EAAE;EACR,CAAC;EACD,IAAIG,mBAAmB,GAAG;IACzBJ,OAAO,EAAE,wBAAwB;IACjCC,KAAK,EAAE;EACR,CAAC;EAED,IAAII,SAAS,GAAG,cAAc,GAAGH,MAAM,CAACI,MAAM,GAAG,GAAG;EACpD,IAAIC,KAAK,GAAGC,MAAM,CAACH,SAAS,GAAG,GAAG,GAAGA,SAAS,CAAC;;EAE/C;EACA,IAAII,SAAS,GAAG;IACfT,OAAO,EAAE,uBAAuB;IAChCU,UAAU,EAAE,IAAI;IAChBT,KAAK,EAAE;EACR,CAAC;EAEDH,KAAK,CAACa,SAAS,CAACC,KAAK,GAAG;IACvB,SAAS,EAAE;MACVZ,OAAO,EAAE,iDAAiD;MAC1DU,UAAU,EAAE,IAAI;MAChBG,MAAM,EAAE;QACP,kBAAkB,EAAE;UACnBb,OAAO,EAAE,SAAS;UAClBU,UAAU,EAAE,IAAI;UAChBT,KAAK,EAAE;QACR,CAAC;QACD,qBAAqB,EAAE;UACtBD,OAAO,EAAE,SAAS;UAClBC,KAAK,EAAE;QACR,CAAC;QACD,OAAO,EAAE;UACRD,OAAO,EAAEO,KAAK;UACdM,MAAM,EAAE;YACP,QAAQ,EAAEX,MAAM;YAChB,mBAAmB,EAAE;cACpBF,OAAO,EAAE,GAAG;cACZC,KAAK,EAAE;YACR;UACD;QACD,CAAC;QACD,gBAAgB,EAAEF,aAAa;QAC/B,WAAW,EAAEK,mBAAmB;QAChC,QAAQ,EAAEF;MACX;IACD,CAAC;IACD,gBAAgB,EAAEH,aAAa;IAC/B,WAAW,EAAEI,SAAS;IACtB,eAAe,EAAE,CAChB;MACC;MACAH,OAAO,EAAE,0BAA0B;MACnCC,KAAK,EAAE;IACR,CAAC,EACD;MACCD,OAAO,EAAE,cAAc;MACvBC,KAAK,EAAE,SAAS;MAChBY,MAAM,EAAE;QACP,YAAY,EAAEJ;MACf;IACD,CAAC,CACD;IACD,QAAQ,EAAE;MACTT,OAAO,EAAE,iBAAiB;MAC1BC,KAAK,EAAE;IACR,CAAC;IACD,QAAQ,EAAEC,MAAM;IAChB,OAAO,EAAE,CACR;MACC;MACA;;MAEA;MACAF,OAAO,EAAE,6EAA6E;MACtFC,KAAK,EAAE,aAAa;MACpBY,MAAM,EAAE;QACP,YAAY,EAAEJ;MACf;IACD,CAAC,EACD;MACCT,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACR,CAAC,CACD;IACD,YAAY,EAAE;MACbD,OAAO,EAAE,iCAAiC;MAC1CC,KAAK,EAAE;IACR,CAAC;IACD,aAAa,EAAE;MACdD,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACR;EACD,CAAC;AAEF,CAAC,EAACH,KAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}