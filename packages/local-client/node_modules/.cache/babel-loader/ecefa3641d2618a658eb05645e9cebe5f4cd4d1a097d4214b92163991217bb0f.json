{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\weraj\\\\OneDrive\\\\Pulpit\\\\ACS\\\\SEM VI\\\\Advanced web techno\\\\pokodowane\\\\packages\\\\local-client\\\\src\\\\components\\\\text-editor.tsx\",\n  _s = $RefreshSig$();\nimport './text-editor.css';\nimport { useState, useEffect, useRef } from 'react';\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { useActions } from '../hooks/use-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextEditor = _ref => {\n  _s();\n  let {\n    cell\n  } = _ref;\n  const ref = useRef(null);\n  const [editing, setEditing] = useState(false);\n  const {\n    updateCell\n  } = useActions();\n  useEffect(() => {\n    const listener = event => {\n      if (ref.current && event.target && ref.current.contains(event.target)) {\n        return;\n      }\n      setEditing(false);\n    };\n    document.addEventListener('click', listener, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener('click', listener, {\n        capture: true\n      });\n    };\n  }, []);\n  if (editing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-editor\",\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: cell.content,\n        onChange: v => updateCell(cell.id, v || '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-editor card\",\n    onClick: () => {\n      setEditing(true);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(MDEditor.Markdown, {\n        source: cell.content || 'Click to edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TextEditor, \"y4/wU36k0tVkjMmZjsHJ0GIYOtE=\", false, function () {\n  return [useActions];\n});\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["useState","useEffect","useRef","MDEditor","useActions","jsxDEV","_jsxDEV","TextEditor","_ref","_s","cell","ref","editing","setEditing","updateCell","listener","event","current","target","contains","document","addEventListener","capture","removeEventListener","className","children","value","content","onChange","v","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Markdown","source","_c","$RefreshReg$"],"sources":["C:/Users/weraj/OneDrive/Pulpit/ACS/SEM VI/Advanced web techno/pokodowane/packages/local-client/src/components/text-editor.tsx"],"sourcesContent":["import './text-editor.css';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport { Cell } from '../state';\r\nimport { useActions } from '../hooks/use-actions';\r\n\r\ninterface TextEditorProps {\r\n  cell: Cell;\r\n}\r\n\r\nconst TextEditor: React.FC<TextEditorProps> = ({cell}) => {\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n  const [editing, setEditing] = useState(false);\r\n  const { updateCell} = useActions();\r\n\r\n  useEffect(() => {\r\n    const listener = (event: MouseEvent) => {\r\n      if (ref.current && event.target && ref.current.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n      setEditing(false);\r\n    };\r\n\r\n    document.addEventListener('click', listener, {capture: true});\r\n\r\n    return () => {\r\n      document.removeEventListener('click', listener, {capture: true});\r\n    }\r\n\r\n  }, [])\r\n\r\n  if (editing) {\r\n    return (\r\n      <div className='text-editor' ref={ref}>\r\n        <MDEditor value={cell.content} onChange={(v) => updateCell(cell.id, v || '')}></MDEditor>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='text-editor card' onClick={() => {setEditing(true)}}>\r\n      <div className='card-content'>\r\n        <MDEditor.Markdown source={cell.content || 'Click to edit'}></MDEditor.Markdown>\r\n      </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default TextEditor;"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,SAASC,UAAU,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMlD,MAAMC,UAAqC,GAAGC,IAAA,IAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAI,CAAC,GAAAF,IAAA;EACnD,MAAMG,GAAG,GAAGT,MAAM,CAAwB,IAAI,CAAC;EAC/C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEc;EAAU,CAAC,GAAGV,UAAU,EAAE;EAElCH,SAAS,CAAC,MAAM;IACd,MAAMc,QAAQ,GAAIC,KAAiB,IAAK;MACtC,IAAIL,GAAG,CAACM,OAAO,IAAID,KAAK,CAACE,MAAM,IAAIP,GAAG,CAACM,OAAO,CAACE,QAAQ,CAACH,KAAK,CAACE,MAAM,CAAS,EAAE;QAC7E;MACF;MACAL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDO,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEN,QAAQ,EAAE;MAACO,OAAO,EAAE;IAAI,CAAC,CAAC;IAE7D,OAAO,MAAM;MACXF,QAAQ,CAACG,mBAAmB,CAAC,OAAO,EAAER,QAAQ,EAAE;QAACO,OAAO,EAAE;MAAI,CAAC,CAAC;IAClE,CAAC;EAEH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIV,OAAO,EAAE;IACX,oBACEN,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAACb,GAAG,EAAEA,GAAI;MAAAc,QAAA,eACpCnB,OAAA,CAACH,QAAQ;QAACuB,KAAK,EAAEhB,IAAI,CAACiB,OAAQ;QAACC,QAAQ,EAAGC,CAAC,IAAKf,UAAU,CAACJ,IAAI,CAACoB,EAAE,EAAED,CAAC,IAAI,EAAE;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAY;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrF;EAEV;EAEA,oBACE5B,OAAA;IAAKkB,SAAS,EAAC,kBAAkB;IAACW,OAAO,EAAEA,CAAA,KAAM;MAACtB,UAAU,CAAC,IAAI,CAAC;IAAA,CAAE;IAAAY,QAAA,eAClEnB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BnB,OAAA,CAACH,QAAQ,CAACiC,QAAQ;QAACC,MAAM,EAAE3B,IAAI,CAACiB,OAAO,IAAI;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAqB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC5E;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACzB,EAAA,CApCIF,UAAqC;EAAA,QAGnBH,UAAU;AAAA;AAAAkC,EAAA,GAH5B/B,UAAqC;AAsC3C,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}