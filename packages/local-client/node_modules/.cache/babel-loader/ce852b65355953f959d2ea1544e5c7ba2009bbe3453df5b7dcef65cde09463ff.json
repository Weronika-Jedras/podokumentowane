{"ast":null,"code":"import { usedTypedSelector } from \"./use-type-selector\";\nexport const useCumulativeCode = cellId => {\n  return usedTypedSelector(state => {\n    const {\n      data,\n      order\n    } = state.cells;\n    const orderedCells = order.map(id => data[id]);\n    const showFunc = `\n    import _React from 'react';\n    import _ReactDOM from 'react-dom';\n\n      var show = (value) => {\n        const root  = document.querySelector('#root');\n        if (typeof value === 'object') {\n          if (value.$$typeof && value.props) {\n            _ReactDOM.render(value, root);\n          } else {\n            root.innerHTML = JSON.stringify(value);\n          }\n        } else {\n          root.innerHTML = value;\n        }\n        \n      };\n    `;\n    const showFuncNoop = 'var show = () => {}';\n    const cumulativeCode = [];\n    for (let c of orderedCells) {\n      if (c.type === 'code') {\n        if (c.id === cellId) {\n          cumulativeCode.push(showFunc);\n        } else {\n          cumulativeCode.push(showFuncNoop);\n        }\n        cumulativeCode.push(c.content);\n      }\n      if (c.id === cellId) {\n        break;\n      }\n    }\n    return cumulativeCode;\n  }).join('\\n');\n};","map":{"version":3,"names":["usedTypedSelector","useCumulativeCode","cellId","state","data","order","cells","orderedCells","map","id","showFunc","showFuncNoop","cumulativeCode","c","type","push","content","join"],"sources":["C:/Users/weraj/OneDrive/Pulpit/ACS/SEM VI/Advanced web techno/pokodowane/packages/local-client/src/hooks/use-cumulative-code.ts"],"sourcesContent":["import { usedTypedSelector } from \"./use-type-selector\";\r\n\r\nexport const useCumulativeCode = (cellId: string) => {\r\n  return usedTypedSelector((state) => {\r\n    const { data, order } = state.cells;\r\n    const orderedCells = order.map(id => data[id]);\r\n\r\n    const showFunc = `\r\n    import _React from 'react';\r\n    import _ReactDOM from 'react-dom';\r\n\r\n      var show = (value) => {\r\n        const root  = document.querySelector('#root');\r\n        if (typeof value === 'object') {\r\n          if (value.$$typeof && value.props) {\r\n            _ReactDOM.render(value, root);\r\n          } else {\r\n            root.innerHTML = JSON.stringify(value);\r\n          }\r\n        } else {\r\n          root.innerHTML = value;\r\n        }\r\n        \r\n      };\r\n    `;\r\n    const showFuncNoop = 'var show = () => {}'\r\n    const cumulativeCode = [];\r\n    for (let c of orderedCells) {\r\n      if (c.type === 'code') {\r\n        if (c.id === cellId) {\r\n          cumulativeCode.push(showFunc);\r\n        } else {\r\n          cumulativeCode.push(showFuncNoop);\r\n        }\r\n        cumulativeCode.push(c.content);\r\n      }\r\n      if(c.id === cellId) {\r\n        break;\r\n      }\r\n    }\r\n    return cumulativeCode;\r\n  }).join('\\n');\r\n};"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qBAAqB;AAEvD,OAAO,MAAMC,iBAAiB,GAAIC,MAAc,IAAK;EACnD,OAAOF,iBAAiB,CAAEG,KAAK,IAAK;IAClC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,KAAK;IACnC,MAAMC,YAAY,GAAGF,KAAK,CAACG,GAAG,CAACC,EAAE,IAAIL,IAAI,CAACK,EAAE,CAAC,CAAC;IAE9C,MAAMC,QAAQ,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACD,MAAMC,YAAY,GAAG,qBAAqB;IAC1C,MAAMC,cAAc,GAAG,EAAE;IACzB,KAAK,IAAIC,CAAC,IAAIN,YAAY,EAAE;MAC1B,IAAIM,CAAC,CAACC,IAAI,KAAK,MAAM,EAAE;QACrB,IAAID,CAAC,CAACJ,EAAE,KAAKP,MAAM,EAAE;UACnBU,cAAc,CAACG,IAAI,CAACL,QAAQ,CAAC;QAC/B,CAAC,MAAM;UACLE,cAAc,CAACG,IAAI,CAACJ,YAAY,CAAC;QACnC;QACAC,cAAc,CAACG,IAAI,CAACF,CAAC,CAACG,OAAO,CAAC;MAChC;MACA,IAAGH,CAAC,CAACJ,EAAE,KAAKP,MAAM,EAAE;QAClB;MACF;IACF;IACA,OAAOU,cAAc;EACvB,CAAC,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}