{"ast":null,"code":"(function (Prism) {\n  var operators = [\n  // query and projection\n  '$eq', '$gt', '$gte', '$in', '$lt', '$lte', '$ne', '$nin', '$and', '$not', '$nor', '$or', '$exists', '$type', '$expr', '$jsonSchema', '$mod', '$regex', '$text', '$where', '$geoIntersects', '$geoWithin', '$near', '$nearSphere', '$all', '$elemMatch', '$size', '$bitsAllClear', '$bitsAllSet', '$bitsAnyClear', '$bitsAnySet', '$comment', '$elemMatch', '$meta', '$slice',\n  // update\n  '$currentDate', '$inc', '$min', '$max', '$mul', '$rename', '$set', '$setOnInsert', '$unset', '$addToSet', '$pop', '$pull', '$push', '$pullAll', '$each', '$position', '$slice', '$sort', '$bit',\n  // aggregation pipeline stages\n  '$addFields', '$bucket', '$bucketAuto', '$collStats', '$count', '$currentOp', '$facet', '$geoNear', '$graphLookup', '$group', '$indexStats', '$limit', '$listLocalSessions', '$listSessions', '$lookup', '$match', '$merge', '$out', '$planCacheStats', '$project', '$redact', '$replaceRoot', '$replaceWith', '$sample', '$set', '$skip', '$sort', '$sortByCount', '$unionWith', '$unset', '$unwind',\n  // aggregation pipeline operators\n  '$abs', '$accumulator', '$acos', '$acosh', '$add', '$addToSet', '$allElementsTrue', '$and', '$anyElementTrue', '$arrayElemAt', '$arrayToObject', '$asin', '$asinh', '$atan', '$atan2', '$atanh', '$avg', '$binarySize', '$bsonSize', '$ceil', '$cmp', '$concat', '$concatArrays', '$cond', '$convert', '$cos', '$dateFromParts', '$dateToParts', '$dateFromString', '$dateToString', '$dayOfMonth', '$dayOfWeek', '$dayOfYear', '$degreesToRadians', '$divide', '$eq', '$exp', '$filter', '$first', '$floor', '$function', '$gt', '$gte', '$hour', '$ifNull', '$in', '$indexOfArray', '$indexOfBytes', '$indexOfCP', '$isArray', '$isNumber', '$isoDayOfWeek', '$isoWeek', '$isoWeekYear', '$last', '$last', '$let', '$literal', '$ln', '$log', '$log10', '$lt', '$lte', '$ltrim', '$map', '$max', '$mergeObjects', '$meta', '$min', '$millisecond', '$minute', '$mod', '$month', '$multiply', '$ne', '$not', '$objectToArray', '$or', '$pow', '$push', '$radiansToDegrees', '$range', '$reduce', '$regexFind', '$regexFindAll', '$regexMatch', '$replaceOne', '$replaceAll', '$reverseArray', '$round', '$rtrim', '$second', '$setDifference', '$setEquals', '$setIntersection', '$setIsSubset', '$setUnion', '$size', '$sin', '$slice', '$split', '$sqrt', '$stdDevPop', '$stdDevSamp', '$strcasecmp', '$strLenBytes', '$strLenCP', '$substr', '$substrBytes', '$substrCP', '$subtract', '$sum', '$switch', '$tan', '$toBool', '$toDate', '$toDecimal', '$toDouble', '$toInt', '$toLong', '$toObjectId', '$toString', '$toLower', '$toUpper', '$trim', '$trunc', '$type', '$week', '$year', '$zip',\n  // aggregation pipeline query modifiers\n  '$comment', '$explain', '$hint', '$max', '$maxTimeMS', '$min', '$orderby', '$query', '$returnKey', '$showDiskLoc', '$natural'];\n  var builtinFunctions = ['ObjectId', 'Code', 'BinData', 'DBRef', 'Timestamp', 'NumberLong', 'NumberDecimal', 'MaxKey', 'MinKey', 'RegExp', 'ISODate', 'UUID'];\n  operators = operators.map(function (operator) {\n    return operator.replace('$', '\\\\$');\n  });\n  var operatorsSource = '(?:' + operators.join('|') + ')\\\\b';\n  Prism.languages.mongodb = Prism.languages.extend('javascript', {});\n  Prism.languages.insertBefore('mongodb', 'string', {\n    'property': {\n      pattern: /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n      greedy: true,\n      inside: {\n        'keyword': RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n      }\n    }\n  });\n  Prism.languages.mongodb.string.inside = {\n    url: {\n      // url pattern\n      pattern: /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n      greedy: true\n    },\n    entity: {\n      // ipv4\n      pattern: /\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b/,\n      greedy: true\n    }\n  };\n  Prism.languages.insertBefore('mongodb', 'constant', {\n    'builtin': {\n      pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n      alias: 'keyword'\n    }\n  });\n})(Prism);","map":{"version":3,"names":["Prism","operators","builtinFunctions","map","operator","replace","operatorsSource","join","languages","mongodb","extend","insertBefore","pattern","greedy","inside","RegExp","string","url","entity","alias"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-mongodb.js"],"sourcesContent":["(function (Prism) {\r\n\r\n\tvar operators = [\r\n\t\t// query and projection\r\n\t\t'$eq', '$gt', '$gte', '$in', '$lt', '$lte', '$ne', '$nin', '$and', '$not', '$nor', '$or',\r\n\t\t'$exists', '$type', '$expr', '$jsonSchema', '$mod', '$regex', '$text', '$where', '$geoIntersects',\r\n\t\t'$geoWithin', '$near', '$nearSphere', '$all', '$elemMatch', '$size', '$bitsAllClear', '$bitsAllSet',\r\n\t\t'$bitsAnyClear', '$bitsAnySet', '$comment', '$elemMatch', '$meta', '$slice',\r\n\r\n\t\t// update\r\n\t\t'$currentDate', '$inc', '$min', '$max', '$mul', '$rename', '$set', '$setOnInsert', '$unset',\r\n\t\t'$addToSet', '$pop', '$pull', '$push', '$pullAll', '$each', '$position', '$slice', '$sort', '$bit',\r\n\r\n\t\t// aggregation pipeline stages\r\n\t\t'$addFields', '$bucket', '$bucketAuto', '$collStats', '$count', '$currentOp', '$facet', '$geoNear',\r\n\t\t'$graphLookup', '$group', '$indexStats', '$limit', '$listLocalSessions', '$listSessions', '$lookup',\r\n\t\t'$match', '$merge', '$out', '$planCacheStats', '$project', '$redact', '$replaceRoot', '$replaceWith',\r\n\t\t'$sample', '$set', '$skip', '$sort', '$sortByCount', '$unionWith', '$unset', '$unwind',\r\n\r\n\t\t// aggregation pipeline operators\r\n\t\t'$abs', '$accumulator', '$acos', '$acosh', '$add', '$addToSet', '$allElementsTrue', '$and',\r\n\t\t'$anyElementTrue', '$arrayElemAt', '$arrayToObject', '$asin', '$asinh', '$atan', '$atan2',\r\n\t\t'$atanh', '$avg', '$binarySize', '$bsonSize', '$ceil', '$cmp', '$concat', '$concatArrays', '$cond',\r\n\t\t'$convert', '$cos', '$dateFromParts', '$dateToParts', '$dateFromString', '$dateToString', '$dayOfMonth',\r\n\t\t'$dayOfWeek', '$dayOfYear', '$degreesToRadians', '$divide', '$eq', '$exp', '$filter', '$first',\r\n\t\t'$floor', '$function', '$gt', '$gte', '$hour', '$ifNull', '$in', '$indexOfArray', '$indexOfBytes',\r\n\t\t'$indexOfCP', '$isArray', '$isNumber', '$isoDayOfWeek', '$isoWeek', '$isoWeekYear', '$last',\r\n\t\t'$last', '$let', '$literal', '$ln', '$log', '$log10', '$lt', '$lte', '$ltrim', '$map', '$max',\r\n\t\t'$mergeObjects', '$meta', '$min', '$millisecond', '$minute', '$mod', '$month', '$multiply', '$ne',\r\n\t\t'$not', '$objectToArray', '$or', '$pow', '$push', '$radiansToDegrees', '$range', '$reduce',\r\n\t\t'$regexFind', '$regexFindAll', '$regexMatch', '$replaceOne', '$replaceAll', '$reverseArray', '$round',\r\n\t\t'$rtrim', '$second', '$setDifference', '$setEquals', '$setIntersection', '$setIsSubset', '$setUnion',\r\n\t\t'$size', '$sin', '$slice', '$split', '$sqrt', '$stdDevPop', '$stdDevSamp', '$strcasecmp', '$strLenBytes',\r\n\t\t'$strLenCP', '$substr', '$substrBytes', '$substrCP', '$subtract', '$sum', '$switch', '$tan',\r\n\t\t'$toBool', '$toDate', '$toDecimal', '$toDouble', '$toInt', '$toLong', '$toObjectId', '$toString',\r\n\t\t'$toLower', '$toUpper', '$trim', '$trunc', '$type', '$week', '$year', '$zip',\r\n\r\n\t\t// aggregation pipeline query modifiers\r\n\t\t'$comment', '$explain', '$hint', '$max', '$maxTimeMS', '$min', '$orderby', '$query',\r\n\t\t'$returnKey', '$showDiskLoc', '$natural',\r\n\t];\r\n\r\n\tvar builtinFunctions = [\r\n\t\t'ObjectId',\r\n\t\t'Code',\r\n\t\t'BinData',\r\n\t\t'DBRef',\r\n\t\t'Timestamp',\r\n\t\t'NumberLong',\r\n\t\t'NumberDecimal',\r\n\t\t'MaxKey',\r\n\t\t'MinKey',\r\n\t\t'RegExp',\r\n\t\t'ISODate',\r\n\t\t'UUID',\r\n\t];\r\n\r\n\toperators = operators.map(function (operator) {\r\n\t\treturn operator.replace('$', '\\\\$');\r\n\t});\r\n\r\n\tvar operatorsSource = '(?:' + operators.join('|') + ')\\\\b';\r\n\r\n\tPrism.languages.mongodb = Prism.languages.extend('javascript', {});\r\n\r\n\tPrism.languages.insertBefore('mongodb', 'string', {\r\n\t\t'property': {\r\n\t\t\tpattern: /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'keyword': RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.languages.mongodb.string.inside = {\r\n\t\turl: {\r\n\t\t\t// url pattern\r\n\t\t\tpattern: /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\tentity: {\r\n\t\t\t// ipv4\r\n\t\t\tpattern: /\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b/,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t};\r\n\r\n\tPrism.languages.insertBefore('mongodb', 'constant', {\r\n\t\t'builtin': {\r\n\t\t\tpattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\r\n\t\t\talias: 'keyword'\r\n\t\t}\r\n\t});\r\n\r\n}(Prism));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}