{"ast":null,"code":"(function (Prism) {\n  Prism.languages.tt2 = Prism.languages.extend('clike', {\n    'comment': /#.*|\\[%#[\\s\\S]*?%\\]/,\n    'keyword': /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n    'punctuation': /[[\\]{},()]/\n  });\n  Prism.languages.insertBefore('tt2', 'number', {\n    'operator': /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n    'variable': {\n      pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n    }\n  });\n  Prism.languages.insertBefore('tt2', 'keyword', {\n    'delimiter': {\n      pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('tt2', 'string', {\n    'single-quoted-string': {\n      pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'variable': {\n          pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n        }\n      }\n    }\n  });\n\n  // The different types of TT2 strings \"replace\" the C-like standard string\n  delete Prism.languages.tt2.string;\n  Prism.hooks.add('before-tokenize', function (env) {\n    var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n  });\n})(Prism);","map":{"version":3,"names":["Prism","languages","tt2","extend","insertBefore","pattern","alias","greedy","inside","string","hooks","add","env","tt2Pattern","buildPlaceholders","tokenizePlaceholders"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-tt2.js"],"sourcesContent":["(function (Prism) {\r\n\r\n\tPrism.languages.tt2 = Prism.languages.extend('clike', {\r\n\t\t'comment': /#.*|\\[%#[\\s\\S]*?%\\]/,\r\n\t\t'keyword': /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\r\n\t\t'punctuation': /[[\\]{},()]/\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('tt2', 'number', {\r\n\t\t'operator': /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\r\n\t\t'variable': {\r\n\t\t\tpattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('tt2', 'keyword', {\r\n\t\t'delimiter': {\r\n\t\t\tpattern: /^(?:\\[%|%%)-?|-?%\\]$/,\r\n\t\t\talias: 'punctuation'\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('tt2', 'string', {\r\n\t\t'single-quoted-string': {\r\n\t\t\tpattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\r\n\t\t\tgreedy: true,\r\n\t\t\talias: 'string'\r\n\t\t},\r\n\t\t'double-quoted-string': {\r\n\t\t\tpattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\r\n\t\t\tgreedy: true,\r\n\t\t\talias: 'string',\r\n\t\t\tinside: {\r\n\t\t\t\t'variable': {\r\n\t\t\t\t\tpattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// The different types of TT2 strings \"replace\" the C-like standard string\r\n\tdelete Prism.languages.tt2.string;\r\n\r\n\tPrism.hooks.add('before-tokenize', function (env) {\r\n\t\tvar tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\r\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\r\n\t});\r\n\r\n\tPrism.hooks.add('after-tokenize', function (env) {\r\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\r\n\t});\r\n\r\n}(Prism));\r\n"],"mappings":"AAAC,WAAUA,KAAK,EAAE;EAEjBA,KAAK,CAACC,SAAS,CAACC,GAAG,GAAGF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,EAAE;IACrD,SAAS,EAAE,qBAAqB;IAChC,SAAS,EAAE,yNAAyN;IACpO,aAAa,EAAE;EAChB,CAAC,CAAC;EAEFH,KAAK,CAACC,SAAS,CAACG,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE;IAC7C,UAAU,EAAE,gDAAgD;IAC5D,UAAU,EAAE;MACXC,OAAO,EAAE;IACV;EACD,CAAC,CAAC;EAEFL,KAAK,CAACC,SAAS,CAACG,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE;IAC9C,WAAW,EAAE;MACZC,OAAO,EAAE,sBAAsB;MAC/BC,KAAK,EAAE;IACR;EACD,CAAC,CAAC;EAEFN,KAAK,CAACC,SAAS,CAACG,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE;IAC7C,sBAAsB,EAAE;MACvBC,OAAO,EAAE,+BAA+B;MACxCE,MAAM,EAAE,IAAI;MACZD,KAAK,EAAE;IACR,CAAC;IACD,sBAAsB,EAAE;MACvBD,OAAO,EAAE,+BAA+B;MACxCE,MAAM,EAAE,IAAI;MACZD,KAAK,EAAE,QAAQ;MACfE,MAAM,EAAE;QACP,UAAU,EAAE;UACXH,OAAO,EAAE;QACV;MACD;IACD;EACD,CAAC,CAAC;;EAEF;EACA,OAAOL,KAAK,CAACC,SAAS,CAACC,GAAG,CAACO,MAAM;EAEjCT,KAAK,CAACU,KAAK,CAACC,GAAG,CAAC,iBAAiB,EAAE,UAAUC,GAAG,EAAE;IACjD,IAAIC,UAAU,GAAG,iBAAiB;IAClCb,KAAK,CAACC,SAAS,CAAC,mBAAmB,CAAC,CAACa,iBAAiB,CAACF,GAAG,EAAE,KAAK,EAAEC,UAAU,CAAC;EAC/E,CAAC,CAAC;EAEFb,KAAK,CAACU,KAAK,CAACC,GAAG,CAAC,gBAAgB,EAAE,UAAUC,GAAG,EAAE;IAChDZ,KAAK,CAACC,SAAS,CAAC,mBAAmB,CAAC,CAACc,oBAAoB,CAACH,GAAG,EAAE,KAAK,CAAC;EACtE,CAAC,CAAC;AAEH,CAAC,EAACZ,KAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}