{"ast":null,"code":"(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\n    lookbehind: true\n  };\n  // 123 -123 .123 -.123 12.3 -12.3\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(Prism);","map":{"version":3,"names":["Prism","string","selectorInside","languages","css","selector","pattern","lookbehind","inside","RegExp","source","greedy","alias","insertBefore","unit","number"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-css-extras.js"],"sourcesContent":["(function (Prism) {\r\n\r\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\r\n\tvar selectorInside;\r\n\r\n\tPrism.languages.css.selector = {\r\n\t\tpattern: Prism.languages.css.selector.pattern,\r\n\t\tlookbehind: true,\r\n\t\tinside: selectorInside = {\r\n\t\t\t'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\r\n\t\t\t'pseudo-class': /:[-\\w]+/,\r\n\t\t\t'class': /\\.[-\\w]+/,\r\n\t\t\t'id': /#[-\\w]+/,\r\n\t\t\t'attribute': {\r\n\t\t\t\tpattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^\\[|\\]$/,\r\n\t\t\t\t\t'case-sensitivity': {\r\n\t\t\t\t\t\tpattern: /(\\s)[si]$/i,\r\n\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\talias: 'keyword'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'namespace': {\r\n\t\t\t\t\t\tpattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\r\n\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\t'punctuation': /\\|$/\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'attr-name': {\r\n\t\t\t\t\t\tpattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\r\n\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'attr-value': [\r\n\t\t\t\t\t\tstring,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'operator': /[|~*^$]?=/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'n-th': [\r\n\t\t\t\t{\r\n\t\t\t\t\tpattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'number': /[\\dn]+/,\r\n\t\t\t\t\t\t'operator': /[+-]/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\r\n\t\t\t\t\tlookbehind: true\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t'combinator': />|\\+|~|\\|\\|/,\r\n\r\n\t\t\t// the `tag` token has been existed and removed.\r\n\t\t\t// because we can't find a perfect tokenize to match it.\r\n\t\t\t// if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\r\n\r\n\t\t\t'punctuation': /[(),]/,\r\n\t\t}\r\n\t};\r\n\r\n\tPrism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\r\n\r\n\tPrism.languages.insertBefore('css', 'property', {\r\n\t\t'variable': {\r\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t});\r\n\r\n\tvar unit = {\r\n\t\tpattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\r\n\t\tlookbehind: true\r\n\t};\r\n\t// 123 -123 .123 -.123 12.3 -12.3\r\n\tvar number = {\r\n\t\tpattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\r\n\t\tlookbehind: true\r\n\t};\r\n\r\n\tPrism.languages.insertBefore('css', 'function', {\r\n\t\t'operator': {\r\n\t\t\tpattern: /(\\s)[+\\-*\\/](?=\\s)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t// CAREFUL!\r\n\t\t// Previewers and Inline color use hexcode and color.\r\n\t\t'hexcode': {\r\n\t\t\tpattern: /\\B#[\\da-f]{3,8}\\b/i,\r\n\t\t\talias: 'color'\r\n\t\t},\r\n\t\t'color': [\r\n\t\t\t/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\r\n\t\t\t{\r\n\t\t\t\tpattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'unit': unit,\r\n\t\t\t\t\t'number': number,\r\n\t\t\t\t\t'function': /[\\w-]+(?=\\()/,\r\n\t\t\t\t\t'punctuation': /[(),]/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t// it's important that there is no boundary assertion after the hex digits\r\n\t\t'entity': /\\\\[\\da-f]{1,8}/i,\r\n\t\t'unit': unit,\r\n\t\t'number': number\r\n\t});\r\n\r\n}(Prism));\r\n"],"mappings":"AAAC,WAAUA,KAAK,EAAE;EAEjB,IAAIC,MAAM,GAAG,+CAA+C;EAC5D,IAAIC,cAAc;EAElBF,KAAK,CAACG,SAAS,CAACC,GAAG,CAACC,QAAQ,GAAG;IAC9BC,OAAO,EAAEN,KAAK,CAACG,SAAS,CAACC,GAAG,CAACC,QAAQ,CAACC,OAAO;IAC7CC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAEN,cAAc,GAAG;MACxB,gBAAgB,EAAE,8DAA8D;MAChF,cAAc,EAAE,SAAS;MACzB,OAAO,EAAE,UAAU;MACnB,IAAI,EAAE,SAAS;MACf,WAAW,EAAE;QACZI,OAAO,EAAEG,MAAM,CAAC,mBAAmB,GAAGR,MAAM,CAACS,MAAM,GAAG,OAAO,CAAC;QAC9DC,MAAM,EAAE,IAAI;QACZH,MAAM,EAAE;UACP,aAAa,EAAE,SAAS;UACxB,kBAAkB,EAAE;YACnBF,OAAO,EAAE,YAAY;YACrBC,UAAU,EAAE,IAAI;YAChBK,KAAK,EAAE;UACR,CAAC;UACD,WAAW,EAAE;YACZN,OAAO,EAAE,2CAA2C;YACpDC,UAAU,EAAE,IAAI;YAChBC,MAAM,EAAE;cACP,aAAa,EAAE;YAChB;UACD,CAAC;UACD,WAAW,EAAE;YACZF,OAAO,EAAE,mCAAmC;YAC5CC,UAAU,EAAE;UACb,CAAC;UACD,YAAY,EAAE,CACbN,MAAM,EACN;YACCK,OAAO,EAAE,2CAA2C;YACpDC,UAAU,EAAE;UACb,CAAC,CACD;UACD,UAAU,EAAE;QACb;MACD,CAAC;MACD,MAAM,EAAE,CACP;QACCD,OAAO,EAAE,iDAAiD;QAC1DC,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACP,QAAQ,EAAE,QAAQ;UAClB,UAAU,EAAE;QACb;MACD,CAAC,EACD;QACCF,OAAO,EAAE,+BAA+B;QACxCC,UAAU,EAAE;MACb,CAAC,CACD;MACD,YAAY,EAAE,aAAa;MAE3B;MACA;MACA;;MAEA,aAAa,EAAE;IAChB;EACD,CAAC;EAEDP,KAAK,CAACG,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACI,MAAM,CAAC,4BAA4B,CAAC,CAACA,MAAM,GAAGN,cAAc;EAE1FF,KAAK,CAACG,SAAS,CAACU,YAAY,CAAC,KAAK,EAAE,UAAU,EAAE;IAC/C,UAAU,EAAE;MACXP,OAAO,EAAE,6EAA6E;MACtFC,UAAU,EAAE;IACb;EACD,CAAC,CAAC;EAEF,IAAIO,IAAI,GAAG;IACVR,OAAO,EAAE,uBAAuB;IAChCC,UAAU,EAAE;EACb,CAAC;EACD;EACA,IAAIQ,MAAM,GAAG;IACZT,OAAO,EAAE,sCAAsC;IAC/CC,UAAU,EAAE;EACb,CAAC;EAEDP,KAAK,CAACG,SAAS,CAACU,YAAY,CAAC,KAAK,EAAE,UAAU,EAAE;IAC/C,UAAU,EAAE;MACXP,OAAO,EAAE,oBAAoB;MAC7BC,UAAU,EAAE;IACb,CAAC;IACD;IACA;IACA,SAAS,EAAE;MACVD,OAAO,EAAE,oBAAoB;MAC7BM,KAAK,EAAE;IACR,CAAC;IACD,OAAO,EAAE,CACR,o5CAAo5C,EACp5C;MACCN,OAAO,EAAE,2JAA2J;MACpKE,MAAM,EAAE;QACP,MAAM,EAAEM,IAAI;QACZ,QAAQ,EAAEC,MAAM;QAChB,UAAU,EAAE,cAAc;QAC1B,aAAa,EAAE;MAChB;IACD,CAAC,CACD;IACD;IACA,QAAQ,EAAE,iBAAiB;IAC3B,MAAM,EAAED,IAAI;IACZ,QAAQ,EAAEC;EACX,CAAC,CAAC;AAEH,CAAC,EAACf,KAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}