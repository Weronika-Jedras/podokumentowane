{"ast":null,"code":"import { produce } from 'immer';\n//import { defaultImport } from \"default-import\";\nimport { ActionType } from \"../action-types\";\nconst initialState = {\n  loading: false,\n  error: null,\n  order: [],\n  data: {}\n};\nconst reducer = produce(function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ActionType.UPDATE_CELL:\n      const {\n        id,\n        content\n      } = action.payload;\n      state.data[id].content = content;\n      return state;\n    case ActionType.DELETE_CELL:\n      delete state.data[action.payload];\n      state.order = state.order.filter(id => id !== action.payload);\n      return state;\n    case ActionType.MOVE_CELL:\n      const {\n        direction\n      } = action.payload;\n      const index = state.order.findIndex(id => id === action.payload.id);\n      const targetIndex = direction === 'up' ? index - 1 : index + 1;\n      if (targetIndex < 0 || targetIndex > state.order.length - 1) {\n        return state;\n      }\n      state.order[index] = state.order[targetIndex];\n      state.order[targetIndex] = action.payload.id;\n      return state;\n    case ActionType.INSERT_CELL_AFTER:\n      const cell = {\n        content: '',\n        type: action.payload.type,\n        id: randomId()\n      };\n      state.data[cell.id] = cell;\n      const foundIndex = state.order.findIndex(id => id === action.payload.id);\n      if (foundIndex < 0) {\n        state.order.unshift(cell.id);\n      } else {\n        state.order.splice(foundIndex + 1, 0, cell.id);\n      }\n      return state;\n    default:\n      return state;\n  }\n}, initialState);\nconst randomId = () => {\n  return Math.random().toString(36).substring(2, 5);\n};\nexport default reducer;","map":{"version":3,"names":["produce","ActionType","initialState","loading","error","order","data","reducer","state","arguments","length","undefined","action","type","UPDATE_CELL","id","content","payload","DELETE_CELL","filter","MOVE_CELL","direction","index","findIndex","targetIndex","INSERT_CELL_AFTER","cell","randomId","foundIndex","unshift","splice","Math","random","toString","substring"],"sources":["C:/Users/weraj/OneDrive/Pulpit/importante/test/src/state/reducers/cellsReducer.ts"],"sourcesContent":["import { produce } from 'immer';\r\n//import { defaultImport } from \"default-import\";\r\nimport { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\nimport { Cell } from \"../cell\";\r\n\r\ninterface CellsState {\r\n  loading: boolean;\r\n  error: string | null;\r\n  order: string[];\r\n  data: {\r\n    [key: string]: Cell\r\n  }\r\n}\r\n\r\nconst initialState: CellsState = {\r\n  loading: false,\r\n  error: null,\r\n  order: [],\r\n  data: {}\r\n};\r\n\r\nconst reducer = produce((state: CellsState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.UPDATE_CELL:\r\n      const { id, content } = action.payload;\r\n      \r\n      state.data[id].content = content;\r\n      return state;\r\n    case ActionType.DELETE_CELL:\r\n      delete state.data[action.payload];\r\n      state.order = state.order.filter((id) => id !== action.payload);\r\n      return state;\r\n    case ActionType.MOVE_CELL:\r\n      const { direction } = action.payload;\r\n      const index = state.order.findIndex((id) => id === action.payload.id);\r\n      const targetIndex = direction === 'up' ? index -1 : index +1;\r\n\r\n      if (targetIndex < 0 || targetIndex > state.order.length - 1){\r\n        return state;\r\n      }\r\n\r\n      state.order[index] = state.order[targetIndex];\r\n      state.order[targetIndex] = action.payload.id;\r\n\r\n      return state;\r\n    case ActionType.INSERT_CELL_AFTER:\r\n      const cell: Cell = {\r\n        content: '',\r\n        type: action.payload.type,\r\n        id: randomId()\r\n      };\r\n\r\n      state.data[cell.id] = cell;\r\n\r\n      const foundIndex = state.order.findIndex(id => id ===action.payload.id);\r\n\r\n      if (foundIndex < 0){\r\n        state.order.unshift(cell.id);\r\n      } else {\r\n        state.order.splice(foundIndex + 1, 0, cell.id);\r\n      }\r\n\r\n\r\n      return state;\r\n    default:\r\n        return state;\r\n  }\r\n}, initialState);\r\n\r\nconst randomId = () => {\r\n  return Math.random().toString(36).substring(2,5);\r\n};\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}