{"ast":null,"code":"import'./code-editor.css';import{useRef}from'react';import MonacoEditor from'@monaco-editor/react';import prettier from'prettier';import parser from'prettier/parser-babel';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CodeEditor=function CodeEditor(_ref){var onChange=_ref.onChange,initialValue=_ref.initialValue;var editorRef=useRef();var onEditorDidMount=function onEditorDidMount(getValue,monacoEditor){var _monacoEditor$getMode;editorRef.current=monacoEditor;monacoEditor.onDidChangeModelContent(function(){onChange(getValue());});(_monacoEditor$getMode=monacoEditor.getModel())===null||_monacoEditor$getMode===void 0?void 0:_monacoEditor$getMode.updateOptions({tabSize:2});};var onFormatClick=function onFormatClick(){//get current value from editor\nvar unformatted=editorRef.current.getModel().getValue();//format that value\nvar formatted=prettier.format(unformatted,{parser:'babel',plugins:[parser],useTabs:false,semi:true,singleQuote:true}).replace(/\\n$/,'');//set the formatted value back in the editor\neditorRef.current.setValue(formatted);};return/*#__PURE__*/_jsxs(\"div\",{className:\"editor-wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button button-format is-primary is-small\",onClick:onFormatClick,children:\"Format\"}),/*#__PURE__*/_jsx(MonacoEditor,{editorDidMount:onEditorDidMount,value:initialValue,theme:\"dark\",language:\"javascript\",height:\"100%\",options:{wordWrap:\"on\",minimap:{enabled:false},showUnused:false,folding:false,lineNumbersMinChars:3,fontSize:16,scrollBeyondLastLine:false,automaticLayout:true}})]});};export default CodeEditor;","map":{"version":3,"names":["useRef","MonacoEditor","prettier","parser","jsx","_jsx","jsxs","_jsxs","CodeEditor","_ref","onChange","initialValue","editorRef","onEditorDidMount","getValue","monacoEditor","_monacoEditor$getMode","current","onDidChangeModelContent","getModel","updateOptions","tabSize","onFormatClick","unformatted","formatted","format","plugins","useTabs","semi","singleQuote","replace","setValue","className","children","onClick","editorDidMount","value","theme","language","height","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"sources":["C:/Users/weraj/OneDrive/Pulpit/ACS/SEM VI/Advanced web techno/pokodowane/packages/local-client/src/components/code-editor.tsx"],"sourcesContent":["import './code-editor.css';\r\nimport { useRef } from 'react';\r\nimport MonacoEditor, {EditorDidMount} from '@monaco-editor/react';\r\nimport prettier from 'prettier';\r\nimport parser from 'prettier/parser-babel';\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void;\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({onChange, initialValue}) => {\r\n  const editorRef = useRef<any>();\r\n  \r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor;\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue());\r\n    });\r\n\r\n    monacoEditor.getModel()?.updateOptions({tabSize: 2});\r\n  };\r\n\r\n  const onFormatClick = () => {\r\n    //get current value from editor\r\n    const unformatted = editorRef.current.getModel().getValue();\r\n\r\n    //format that value\r\n    const formatted = prettier.format(unformatted, {\r\n      parser: 'babel',\r\n      plugins: [parser],\r\n      useTabs: false,\r\n      semi: true,\r\n      singleQuote: true\r\n    }).replace(/\\n$/, '');\r\n\r\n    //set the formatted value back in the editor\r\n    editorRef.current.setValue(formatted);\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <button  \r\n        className=\"button button-format is-primary is-small\" \r\n        onClick={onFormatClick}>\r\n          Format\r\n        </button>\r\n      <MonacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        theme='dark'\r\n        language='javascript'\r\n        height=\"100%\"\r\n        options={{\r\n          wordWrap:\"on\",\r\n          minimap: {enabled: false},\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CodeEditor;"],"mappings":"AAAA,MAAO,mBAAmB,CAC1B,OAASA,MAAM,KAAQ,OAAO,CAC9B,MAAO,CAAAC,YAAY,KAAwB,sBAAsB,CACjE,MAAO,CAAAC,QAAQ,KAAM,UAAU,CAC/B,MAAO,CAAAC,MAAM,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAO3C,GAAM,CAAAC,UAAqC,CAAG,QAAxC,CAAAA,UAAqCA,CAAAC,IAAA,CAAiC,IAA5B,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAAEC,YAAY,CAAAF,IAAA,CAAZE,YAAY,CACpE,GAAM,CAAAC,SAAS,CAAGZ,MAAM,EAAO,CAE/B,GAAM,CAAAa,gBAAgC,CAAG,QAAnC,CAAAA,gBAAgCA,CAAIC,QAAQ,CAAEC,YAAY,CAAK,KAAAC,qBAAA,CACnEJ,SAAS,CAACK,OAAO,CAAGF,YAAY,CAChCA,YAAY,CAACG,uBAAuB,CAAC,UAAM,CACzCR,QAAQ,CAACI,QAAQ,EAAE,CAAC,CACtB,CAAC,CAAC,CAEF,CAAAE,qBAAA,CAAAD,YAAY,CAACI,QAAQ,EAAE,UAAAH,qBAAA,iBAAvBA,qBAAA,CAAyBI,aAAa,CAAC,CAACC,OAAO,CAAE,CAAC,CAAC,CAAC,CACtD,CAAC,CAED,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B;AACA,GAAM,CAAAC,WAAW,CAAGX,SAAS,CAACK,OAAO,CAACE,QAAQ,EAAE,CAACL,QAAQ,EAAE,CAE3D;AACA,GAAM,CAAAU,SAAS,CAAGtB,QAAQ,CAACuB,MAAM,CAACF,WAAW,CAAE,CAC7CpB,MAAM,CAAE,OAAO,CACfuB,OAAO,CAAE,CAACvB,MAAM,CAAC,CACjBwB,OAAO,CAAE,KAAK,CACdC,IAAI,CAAE,IAAI,CACVC,WAAW,CAAE,IACf,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAErB;AACAlB,SAAS,CAACK,OAAO,CAACc,QAAQ,CAACP,SAAS,CAAC,CACvC,CAAC,CAED,mBACEjB,KAAA,QAAKyB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5B,IAAA,WACE2B,SAAS,CAAC,0CAA0C,CACpDE,OAAO,CAAEZ,aAAc,CAAAW,QAAA,CAAC,QAExB,EAAS,cACX5B,IAAA,CAACJ,YAAY,EACXkC,cAAc,CAAEtB,gBAAiB,CACjCuB,KAAK,CAAEzB,YAAa,CACpB0B,KAAK,CAAC,MAAM,CACZC,QAAQ,CAAC,YAAY,CACrBC,MAAM,CAAC,MAAM,CACbC,OAAO,CAAE,CACPC,QAAQ,CAAC,IAAI,CACbC,OAAO,CAAE,CAACC,OAAO,CAAE,KAAK,CAAC,CACzBC,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,KAAK,CACdC,mBAAmB,CAAE,CAAC,CACtBC,QAAQ,CAAE,EAAE,CACZC,oBAAoB,CAAE,KAAK,CAC3BC,eAAe,CAAE,IACnB,CAAE,EACF,GACE,CAEV,CAAC,CAID,cAAe,CAAAzC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}