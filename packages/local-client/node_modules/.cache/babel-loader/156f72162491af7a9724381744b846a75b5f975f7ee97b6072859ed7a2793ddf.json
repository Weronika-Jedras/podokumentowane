{"ast":null,"code":"Prism.languages.idris = Prism.languages.extend('haskell', {\n  'comment': {\n    pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n  },\n  'keyword': /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n  'import-statement': {\n    pattern: /(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n    lookbehind: true\n  },\n  'builtin': undefined\n});\nPrism.languages.idr = Prism.languages.idris;","map":{"version":3,"names":["Prism","languages","idris","extend","pattern","lookbehind","undefined","idr"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-idris.js"],"sourcesContent":["Prism.languages.idris = Prism.languages.extend('haskell', {\r\n\t'comment': {\r\n\t\tpattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m,\r\n\t},\r\n\t'keyword': /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\r\n\t'import-statement': {\r\n\t\tpattern: /(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'builtin': undefined\r\n});\r\n\r\nPrism.languages.idr = Prism.languages.idris;\r\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,KAAK,GAAGF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,SAAS,EAAE;EACzD,SAAS,EAAE;IACVC,OAAO,EAAE;EACV,CAAC;EACD,SAAS,EAAE,iTAAiT;EAC5T,kBAAkB,EAAE;IACnBA,OAAO,EAAE,mDAAmD;IAC5DC,UAAU,EAAE;EACb,CAAC;EACD,SAAS,EAAEC;AACZ,CAAC,CAAC;AAEFN,KAAK,CAACC,SAAS,CAACM,GAAG,GAAGP,KAAK,CAACC,SAAS,CAACC,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}