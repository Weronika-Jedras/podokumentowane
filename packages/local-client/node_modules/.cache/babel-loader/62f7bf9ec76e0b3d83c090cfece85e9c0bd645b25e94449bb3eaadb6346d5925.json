{"ast":null,"code":"import axios from 'axios';\nimport localforage from 'localforage';\nconst fileCache = localforage.createInstance({\n  name: 'filecache'\n});\nexport const fetchPlugin = inputCode => {\n  return {\n    name: 'fetch-plugin',\n    setup(build) {\n      build.onLoad({\n        filter: /(^index\\.js$)/\n      }, args => {\n        return {\n          loader: 'jsx',\n          contents: inputCode\n        };\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        // Check to see if we have already fetched this file and if it is in the cache\n        const cachedResult = await fileCache.getItem(args.path);\n        // if it is return it immediately\n        if (cachedResult) {\n          return cachedResult;\n        }\n      });\n      build.onLoad({\n        filter: /.css$/\n      }, async args => {\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const escaped = data.replace(/\\n/g, '').replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\n        const contents = `\n        const style = document.createElement('style');\n        style.innerText = '${escaped}';\n        document.head.appendChild(style);\n        `;\n        const result = {\n          loader: 'jsx',\n          contents,\n          resolveDir: new URL('./', request.responseURL).pathname\n        };\n\n        // Store response in cache\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const result = {\n          loader: 'jsx',\n          contents: data,\n          resolveDir: new URL('./', request.responseURL).pathname\n        };\n\n        // Store response in cache\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","localforage","fileCache","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","args","loader","contents","cachedResult","getItem","path","data","request","get","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem"],"sources":["C:/Users/weraj/OneDrive/Pulpit/ACS/SEM VI/Advanced web techno/PoKompilowane/src/bundler/plugins/fetch-plugin.ts"],"sourcesContent":["import * as esbuild from 'esbuild-wasm';\r\nimport axios from 'axios';\r\nimport localforage from 'localforage';\r\n\r\nconst fileCache = localforage.createInstance({\r\n  name: 'filecache'\r\n});\r\n\r\nexport const fetchPlugin = (inputCode: string) => {\r\n  return {\r\n    name: 'fetch-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      build.onLoad({ filter: /(^index\\.js$)/ }, (args: any) => {\r\n        return {\r\n          loader: 'jsx',\r\n          contents: inputCode,\r\n        };\r\n      });\r\n\r\n    build.onLoad( { filter: /.*/ }, async (args: any) => {\r\n      // Check to see if we have already fetched this file and if it is in the cache\r\n      const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(args.path);\r\n      // if it is return it immediately\r\n      if (cachedResult) {\r\n        return cachedResult;\r\n      }\r\n\r\n    } )\r\n\r\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\r\n\r\n      const { data, request } = await axios.get(args.path);\r\n\r\n      const escaped = data\r\n        .replace(/\\n/g, '')\r\n        .replace(/\"/g, '\\\\\"')\r\n        .replace(/'/g, \"\\\\'\");\r\n\r\n      const contents = \r\n        `\r\n        const style = document.createElement('style');\r\n        style.innerText = '${escaped}';\r\n        document.head.appendChild(style);\r\n        `;\r\n      \r\n\r\n      const result: esbuild.OnLoadResult = {\r\n        loader: 'jsx',\r\n        contents,\r\n        resolveDir: new URL('./', request.responseURL).pathname\r\n      };\r\n\r\n      // Store response in cache\r\n      await fileCache.setItem(args.path, result)\r\n\r\n      return result\r\n\r\n      });\r\n\r\n    build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n      \r\n      const { data, request } = await axios.get(args.path);\r\n\r\n      const result: esbuild.OnLoadResult = {\r\n        loader: 'jsx',\r\n        contents: data,\r\n        resolveDir: new URL('./', request.responseURL).pathname\r\n      };\r\n\r\n      // Store response in cache\r\n      await fileCache.setItem(args.path, result)\r\n\r\n      return result\r\n\r\n      });\r\n    }\r\n  }\r\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,aAAa;AAErC,MAAMC,SAAS,GAAGD,WAAW,CAACE,cAAc,CAAC;EAC3CC,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAIC,SAAiB,IAAK;EAChD,OAAO;IACLF,IAAI,EAAE,cAAc;IACpBG,KAAKA,CAACC,KAA0B,EAAE;MAChCA,KAAK,CAACC,MAAM,CAAC;QAAEC,MAAM,EAAE;MAAgB,CAAC,EAAGC,IAAS,IAAK;QACvD,OAAO;UACLC,MAAM,EAAE,KAAK;UACbC,QAAQ,EAAEP;QACZ,CAAC;MACH,CAAC,CAAC;MAEJE,KAAK,CAACC,MAAM,CAAE;QAAEC,MAAM,EAAE;MAAK,CAAC,EAAE,MAAOC,IAAS,IAAK;QACnD;QACA,MAAMG,YAAY,GAAG,MAAMZ,SAAS,CAACa,OAAO,CAAuBJ,IAAI,CAACK,IAAI,CAAC;QAC7E;QACA,IAAIF,YAAY,EAAE;UAChB,OAAOA,YAAY;QACrB;MAEF,CAAC,CAAE;MAEDN,KAAK,CAACC,MAAM,CAAC;QAAEC,MAAM,EAAE;MAAQ,CAAC,EAAE,MAAOC,IAAS,IAAK;QAEvD,MAAM;UAAEM,IAAI;UAAEC;QAAQ,CAAC,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAACR,IAAI,CAACK,IAAI,CAAC;QAEpD,MAAMI,OAAO,GAAGH,IAAI,CACjBI,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CACpBA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;QAEvB,MAAMR,QAAQ,GACX;AACT;AACA,6BAA6BO,OAAQ;AACrC;AACA,SAAS;QAGH,MAAME,MAA4B,GAAG;UACnCV,MAAM,EAAE,KAAK;UACbC,QAAQ;UACRU,UAAU,EAAE,IAAIC,GAAG,CAAC,IAAI,EAAEN,OAAO,CAACO,WAAW,CAAC,CAACC;QACjD,CAAC;;QAED;QACA,MAAMxB,SAAS,CAACyB,OAAO,CAAChB,IAAI,CAACK,IAAI,EAAEM,MAAM,CAAC;QAE1C,OAAOA,MAAM;MAEb,CAAC,CAAC;MAEJd,KAAK,CAACC,MAAM,CAAC;QAAEC,MAAM,EAAE;MAAK,CAAC,EAAE,MAAOC,IAAS,IAAK;QAElD,MAAM;UAAEM,IAAI;UAAEC;QAAQ,CAAC,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAACR,IAAI,CAACK,IAAI,CAAC;QAEpD,MAAMM,MAA4B,GAAG;UACnCV,MAAM,EAAE,KAAK;UACbC,QAAQ,EAAEI,IAAI;UACdM,UAAU,EAAE,IAAIC,GAAG,CAAC,IAAI,EAAEN,OAAO,CAACO,WAAW,CAAC,CAACC;QACjD,CAAC;;QAED;QACA,MAAMxB,SAAS,CAACyB,OAAO,CAAChB,IAAI,CAACK,IAAI,EAAEM,MAAM,CAAC;QAE1C,OAAOA,MAAM;MAEb,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}