{"ast":null,"code":"Prism.languages.liquid = {\n  'comment': {\n    pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n    lookbehind: true\n  },\n  'delimiter': {\n    pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n    alias: 'punctuation'\n  },\n  'string': {\n    pattern: /\"[^\"]*\"|'[^']*'/,\n    greedy: true\n  },\n  'keyword': /\\b(?:as|assign|break|continue|cycle|decrement|echo|else|elsif|(?:end)?(?:capture|case|comment|for|form|if|paginate|style|raw|tablerow|unless)|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n  'function': [{\n    pattern: /(\\|\\s*)\\w+/,\n    lookbehind: true,\n    alias: 'filter'\n  }, {\n    // array functions\n    pattern: /(\\.\\s*)(?:first|last|size)/,\n    lookbehind: true\n  }],\n  'boolean': /\\b(?:true|false|nil)\\b/,\n  'range': {\n    pattern: /\\.\\./,\n    alias: 'operator'\n  },\n  // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n  'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n  'operator': /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|or|contains(?=\\s))\\b/,\n  'punctuation': /[.,\\[\\]()]/\n};\nPrism.hooks.add('before-tokenize', function (env) {\n  var liquidPattern = /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g;\n  var insideRaw = false;\n  Prism.languages['markup-templating'].buildPlaceholders(env, 'liquid', liquidPattern, function (match) {\n    var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match);\n    if (tagMatch) {\n      var tag = tagMatch[1];\n      if (tag === 'raw' && !insideRaw) {\n        insideRaw = true;\n        return true;\n      } else if (tag === 'endraw') {\n        insideRaw = false;\n        return true;\n      }\n    }\n    return !insideRaw;\n  });\n});\nPrism.hooks.add('after-tokenize', function (env) {\n  Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid');\n});","map":{"version":3,"names":["Prism","languages","liquid","pattern","lookbehind","alias","greedy","hooks","add","env","liquidPattern","insideRaw","buildPlaceholders","match","tagMatch","exec","tag","tokenizePlaceholders"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-liquid.js"],"sourcesContent":["Prism.languages.liquid = {\r\n\t'comment': {\r\n\t\tpattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'delimiter': {\r\n\t\tpattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /\"[^\"]*\"|'[^']*'/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'keyword': /\\b(?:as|assign|break|continue|cycle|decrement|echo|else|elsif|(?:end)?(?:capture|case|comment|for|form|if|paginate|style|raw|tablerow|unless)|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\r\n\t'function': [\r\n\t\t{\r\n\t\t\tpattern: /(\\|\\s*)\\w+/,\r\n\t\t\tlookbehind: true,\r\n\t\t\talias: 'filter'\r\n\t\t},\r\n\t\t{\r\n\t\t\t// array functions\r\n\t\t\tpattern: /(\\.\\s*)(?:first|last|size)/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'boolean': /\\b(?:true|false|nil)\\b/,\r\n\t'range': {\r\n\t\tpattern: /\\.\\./,\r\n\t\talias: 'operator'\r\n\t},\r\n\t// https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\r\n\t'number': /\\b\\d+(?:\\.\\d+)?\\b/,\r\n\t'operator': /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|or|contains(?=\\s))\\b/,\r\n\t'punctuation': /[.,\\[\\]()]/\r\n};\r\n\r\nPrism.hooks.add('before-tokenize', function (env) {\r\n\tvar liquidPattern = /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g;\r\n\tvar insideRaw = false;\r\n\r\n\tPrism.languages['markup-templating'].buildPlaceholders(env, 'liquid', liquidPattern, function (match) {\r\n\t\tvar tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match);\r\n\t\tif (tagMatch) {\r\n\t\t\tvar tag = tagMatch[1];\r\n\t\t\tif (tag === 'raw' && !insideRaw) {\r\n\t\t\t\tinsideRaw = true;\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (tag === 'endraw') {\r\n\t\t\t\tinsideRaw = false;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn !insideRaw;\r\n\t});\r\n});\r\n\r\nPrism.hooks.add('after-tokenize', function (env) {\r\n\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid');\r\n});\r\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAG;EACxB,SAAS,EAAE;IACVC,OAAO,EAAE,0DAA0D;IACnEC,UAAU,EAAE;EACb,CAAC;EACD,WAAW,EAAE;IACZD,OAAO,EAAE,yCAAyC;IAClDE,KAAK,EAAE;EACR,CAAC;EACD,QAAQ,EAAE;IACTF,OAAO,EAAE,iBAAiB;IAC1BG,MAAM,EAAE;EACT,CAAC;EACD,SAAS,EAAE,mOAAmO;EAC9O,UAAU,EAAE,CACX;IACCH,OAAO,EAAE,YAAY;IACrBC,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE;EACR,CAAC,EACD;IACC;IACAF,OAAO,EAAE,4BAA4B;IACrCC,UAAU,EAAE;EACb,CAAC,CACD;EACD,SAAS,EAAE,wBAAwB;EACnC,OAAO,EAAE;IACRD,OAAO,EAAE,MAAM;IACfE,KAAK,EAAE;EACR,CAAC;EACD;EACA,QAAQ,EAAE,mBAAmB;EAC7B,UAAU,EAAE,uDAAuD;EACnE,aAAa,EAAE;AAChB,CAAC;AAEDL,KAAK,CAACO,KAAK,CAACC,GAAG,CAAC,iBAAiB,EAAE,UAAUC,GAAG,EAAE;EACjD,IAAIC,aAAa,GAAG,qGAAqG;EACzH,IAAIC,SAAS,GAAG,KAAK;EAErBX,KAAK,CAACC,SAAS,CAAC,mBAAmB,CAAC,CAACW,iBAAiB,CAACH,GAAG,EAAE,QAAQ,EAAEC,aAAa,EAAE,UAAUG,KAAK,EAAE;IACrG,IAAIC,QAAQ,GAAG,gBAAgB,CAACC,IAAI,CAACF,KAAK,CAAC;IAC3C,IAAIC,QAAQ,EAAE;MACb,IAAIE,GAAG,GAAGF,QAAQ,CAAC,CAAC,CAAC;MACrB,IAAIE,GAAG,KAAK,KAAK,IAAI,CAACL,SAAS,EAAE;QAChCA,SAAS,GAAG,IAAI;QAChB,OAAO,IAAI;MACZ,CAAC,MAAM,IAAIK,GAAG,KAAK,QAAQ,EAAE;QAC5BL,SAAS,GAAG,KAAK;QACjB,OAAO,IAAI;MACZ;IACD;IAEA,OAAO,CAACA,SAAS;EAClB,CAAC,CAAC;AACH,CAAC,CAAC;AAEFX,KAAK,CAACO,KAAK,CAACC,GAAG,CAAC,gBAAgB,EAAE,UAAUC,GAAG,EAAE;EAChDT,KAAK,CAACC,SAAS,CAAC,mBAAmB,CAAC,CAACgB,oBAAoB,CAACR,GAAG,EAAE,QAAQ,CAAC;AACzE,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}