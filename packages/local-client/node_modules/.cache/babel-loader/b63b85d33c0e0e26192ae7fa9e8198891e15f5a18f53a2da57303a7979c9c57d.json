{"ast":null,"code":"Prism.languages.matlab = {\n  'comment': [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n  'string': {\n    pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n    greedy: true\n  },\n  // FIXME We could handle imaginary numbers as a whole\n  'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n  'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n  'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\n  'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n  'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\n};","map":{"version":3,"names":["Prism","languages","matlab","pattern","greedy"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-matlab.js"],"sourcesContent":["Prism.languages.matlab = {\r\n\t'comment': [\r\n\t\t/%\\{[\\s\\S]*?\\}%/,\r\n\t\t/%.+/\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /\\B'(?:''|[^'\\r\\n])*'/,\r\n\t\tgreedy: true\r\n\t},\r\n\t// FIXME We could handle imaginary numbers as a whole\r\n\t'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\r\n\t'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\r\n\t'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\r\n\t'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\r\n\t'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\r\n};\r\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAG;EACxB,SAAS,EAAE,CACV,gBAAgB,EAChB,KAAK,CACL;EACD,QAAQ,EAAE;IACTC,OAAO,EAAE,sBAAsB;IAC/BC,MAAM,EAAE;EACT,CAAC;EACD;EACA,QAAQ,EAAE,gEAAgE;EAC1E,SAAS,EAAE,6HAA6H;EACxI,UAAU,EAAE,sBAAsB;EAClC,UAAU,EAAE,yCAAyC;EACrD,aAAa,EAAE;AAChB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}