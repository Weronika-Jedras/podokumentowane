{"ast":null,"code":"(function (Prism) {\n  var schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source;\n  // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n  // For some reason, this can't be 4\n  var recursivenessLog2 = 5;\n  for (var i = 0; i < recursivenessLog2; i++) {\n    schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n      return schemeExpression;\n    });\n  }\n  schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\n  var lilypond = Prism.languages.lilypond = {\n    'comment': /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n    'embedded-scheme': {\n      pattern: RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g, function () {\n        return schemeExpression;\n      }), 'm'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'scheme': {\n          pattern: /^(#)[\\s\\S]+$/,\n          lookbehind: true,\n          alias: 'language-scheme',\n          inside: {\n            'embedded-lilypond': {\n              pattern: /#\\{[\\s\\S]*?#\\}/,\n              greedy: true,\n              inside: {\n                'punctuation': /^#\\{|#\\}$/,\n                'lilypond': {\n                  pattern: /[\\s\\S]+/,\n                  alias: 'language-lilypond',\n                  inside: null // see below\n                }\n              }\n            },\n\n            rest: Prism.languages.scheme\n          }\n        },\n        'punctuation': /#/\n      }\n    },\n    'string': {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\\\new\\s+)[\\w-]+/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /\\\\[a-z][-\\w]*/i,\n      inside: {\n        'punctuation': /^\\\\/\n      }\n    },\n    'operator': /[=|]|<<|>>/,\n    'punctuation': {\n      pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n      lookbehind: true\n    },\n    'number': /\\b\\d+(?:\\/\\d+)?\\b/\n  };\n  lilypond['embedded-scheme'].inside['scheme'].inside['embedded-lilypond'].inside['lilypond'].inside = lilypond;\n  Prism.languages.ly = lilypond;\n})(Prism);","map":{"version":3,"names":["Prism","schemeExpression","source","recursivenessLog2","i","replace","lilypond","languages","pattern","RegExp","lookbehind","greedy","inside","alias","rest","scheme","ly"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-lilypond.js"],"sourcesContent":["(function (Prism) {\r\n\r\n\tvar schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source;\r\n\t// allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\r\n\t// For some reason, this can't be 4\r\n\tvar recursivenessLog2 = 5;\r\n\tfor (var i = 0; i < recursivenessLog2; i++) {\r\n\t\tschemeExpression = schemeExpression.replace(/<expr>/g, function () { return schemeExpression; });\r\n\t}\r\n\tschemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\r\n\r\n\r\n\tvar lilypond = Prism.languages.lilypond = {\r\n\t\t'comment': /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\r\n\t\t'embedded-scheme': {\r\n\t\t\tpattern: RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g, function () { return schemeExpression; }), 'm'),\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'scheme': {\r\n\t\t\t\t\tpattern: /^(#)[\\s\\S]+$/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'language-scheme',\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'embedded-lilypond': {\r\n\t\t\t\t\t\t\tpattern: /#\\{[\\s\\S]*?#\\}/,\r\n\t\t\t\t\t\t\tgreedy: true,\r\n\t\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\t\t'punctuation': /^#\\{|#\\}$/,\r\n\t\t\t\t\t\t\t\t'lilypond': {\r\n\t\t\t\t\t\t\t\t\tpattern: /[\\s\\S]+/,\r\n\t\t\t\t\t\t\t\t\talias: 'language-lilypond',\r\n\t\t\t\t\t\t\t\t\tinside: null // see below\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\trest: Prism.languages.scheme\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'punctuation': /#/\r\n\t\t\t}\r\n\t\t},\r\n\t\t'string': {\r\n\t\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'class-name': {\r\n\t\t\tpattern: /(\\\\new\\s+)[\\w-]+/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'keyword': {\r\n\t\t\tpattern: /\\\\[a-z][-\\w]*/i,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /^\\\\/\r\n\t\t\t}\r\n\t\t},\r\n\t\t'operator': /[=|]|<<|>>/,\r\n\t\t'punctuation': {\r\n\t\t\tpattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'number': /\\b\\d+(?:\\/\\d+)?\\b/\r\n\t};\r\n\r\n\tlilypond['embedded-scheme'].inside['scheme'].inside['embedded-lilypond'].inside['lilypond'].inside = lilypond;\r\n\r\n\tPrism.languages.ly = lilypond;\r\n\r\n}(Prism));\r\n"],"mappings":"AAAC,WAAUA,KAAK,EAAE;EAEjB,IAAIC,gBAAgB,GAAG,kGAAkG,CAACC,MAAM;EAChI;EACA;EACA,IAAIC,iBAAiB,GAAG,CAAC;EACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,iBAAiB,EAAEC,CAAC,EAAE,EAAE;IAC3CH,gBAAgB,GAAGA,gBAAgB,CAACI,OAAO,CAAC,SAAS,EAAE,YAAY;MAAE,OAAOJ,gBAAgB;IAAE,CAAC,CAAC;EACjG;EACAA,gBAAgB,GAAGA,gBAAgB,CAACI,OAAO,CAAC,SAAS,EAAE,SAAS,CAACH,MAAM,CAAC;EAGxE,IAAII,QAAQ,GAAGN,KAAK,CAACO,SAAS,CAACD,QAAQ,GAAG;IACzC,SAAS,EAAE,6BAA6B;IACxC,iBAAiB,EAAE;MAClBE,OAAO,EAAEC,MAAM,CAAC,6DAA6D,CAACP,MAAM,CAACG,OAAO,CAAC,SAAS,EAAE,YAAY;QAAE,OAAOJ,gBAAgB;MAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACvJS,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;QACP,QAAQ,EAAE;UACTJ,OAAO,EAAE,cAAc;UACvBE,UAAU,EAAE,IAAI;UAChBG,KAAK,EAAE,iBAAiB;UACxBD,MAAM,EAAE;YACP,mBAAmB,EAAE;cACpBJ,OAAO,EAAE,gBAAgB;cACzBG,MAAM,EAAE,IAAI;cACZC,MAAM,EAAE;gBACP,aAAa,EAAE,WAAW;gBAC1B,UAAU,EAAE;kBACXJ,OAAO,EAAE,SAAS;kBAClBK,KAAK,EAAE,mBAAmB;kBAC1BD,MAAM,EAAE,IAAI,CAAC;gBACd;cACD;YACD,CAAC;;YACDE,IAAI,EAAEd,KAAK,CAACO,SAAS,CAACQ;UACvB;QACD,CAAC;QACD,aAAa,EAAE;MAChB;IACD,CAAC;IACD,QAAQ,EAAE;MACTP,OAAO,EAAE,mBAAmB;MAC5BG,MAAM,EAAE;IACT,CAAC;IACD,YAAY,EAAE;MACbH,OAAO,EAAE,kBAAkB;MAC3BE,UAAU,EAAE;IACb,CAAC;IACD,SAAS,EAAE;MACVF,OAAO,EAAE,gBAAgB;MACzBI,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,UAAU,EAAE,YAAY;IACxB,aAAa,EAAE;MACdJ,OAAO,EAAE,sGAAsG;MAC/GE,UAAU,EAAE;IACb,CAAC;IACD,QAAQ,EAAE;EACX,CAAC;EAEDJ,QAAQ,CAAC,iBAAiB,CAAC,CAACM,MAAM,CAAC,QAAQ,CAAC,CAACA,MAAM,CAAC,mBAAmB,CAAC,CAACA,MAAM,CAAC,UAAU,CAAC,CAACA,MAAM,GAAGN,QAAQ;EAE7GN,KAAK,CAACO,SAAS,CAACS,EAAE,GAAGV,QAAQ;AAE9B,CAAC,EAACN,KAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}