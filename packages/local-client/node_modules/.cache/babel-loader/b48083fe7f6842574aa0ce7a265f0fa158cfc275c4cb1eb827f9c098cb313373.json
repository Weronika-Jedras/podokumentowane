{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\weraj\\\\OneDrive\\\\Pulpit\\\\importante\\\\local-client\\\\src\\\\components\\\\cell-list-item.tsx\";\nimport './cell-list-item.css';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CellListItem = _ref => {\n  let {\n    cell\n  } = _ref;\n  let child;\n  if (cell.type === 'code') {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ActionBar, {\n        id: cell.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CodeCell, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ActionBar, {\n        id: cell.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextEditor, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list-item\",\n    children: child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_c = CellListItem;\nexport default CellListItem;\nvar _c;\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"names":["CodeCell","TextEditor","ActionBar","jsxDEV","_jsxDEV","Fragment","_Fragment","CellListItem","_ref","cell","child","type","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/weraj/OneDrive/Pulpit/importante/local-client/src/components/cell-list-item.tsx"],"sourcesContent":["import './cell-list-item.css';\r\nimport { Cell } from '../state';\r\nimport CodeCell from './code-cell';\r\nimport TextEditor from './text-editor';\r\nimport ActionBar from './action-bar';\r\n\r\ninterface CellListItemProps {\r\n  cell: Cell;\r\n}\r\n\r\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\r\n  let child: JSX.Element;\r\n  if (cell.type === 'code') {\r\n    child = (\r\n      <>\r\n        <ActionBar id={cell.id} />\r\n        <CodeCell cell={cell} />\r\n      </>\r\n    );\r\n  } else {\r\n    child = (\r\n      <>\r\n        <ActionBar id={cell.id} />\r\n        <TextEditor cell={cell} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <div className=\"cell-list-item\">{child}</div>;\r\n};\r\n\r\nexport default CellListItem;\r\n"],"mappings":";AAAA,OAAO,sBAAsB;AAE7B,OAAOA,QAAQ,MAAM,aAAa;AAClC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMrC,MAAMC,YAAyC,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EACzD,IAAIE,KAAkB;EACtB,IAAID,IAAI,CAACE,IAAI,KAAK,MAAM,EAAE;IACxBD,KAAK,gBACHN,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACER,OAAA,CAACF,SAAS;QAACW,EAAE,EAAEJ,IAAI,CAACI;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1Bb,OAAA,CAACJ,QAAQ;QAACS,IAAI,EAAEA;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA,gBAE3B;EACH,CAAC,MAAM;IACLP,KAAK,gBACHN,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACER,OAAA,CAACF,SAAS;QAACW,EAAE,EAAEJ,IAAI,CAACI;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1Bb,OAAA,CAACH,UAAU;QAACQ,IAAI,EAAEA;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA,gBAE7B;EACH;EAEA,oBAAOb,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAN,QAAA,EAAEF;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACtD,CAAC;AAACE,EAAA,GAnBIZ,YAAyC;AAqB/C,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}