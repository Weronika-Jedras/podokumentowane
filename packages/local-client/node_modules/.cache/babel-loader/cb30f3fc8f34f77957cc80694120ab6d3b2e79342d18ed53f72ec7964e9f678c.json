{"ast":null,"code":"// ABNF grammar:\n// https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n\nPrism.languages.dhall = {\n  // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n  // The multi-line pattern is essentially this:\n  //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n  'comment': /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n  'string': {\n    pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\$\\{[^{}]*\\}/,\n        inside: {\n          'expression': {\n            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            alias: 'language-dhall',\n            inside: null // see blow\n          },\n\n          'punctuation': /\\$\\{|\\}/\n        }\n      }\n    }\n  },\n  'label': {\n    pattern: /`[^`]*`/,\n    greedy: true\n  },\n  'url': {\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n    pattern: /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n    greedy: true\n  },\n  'env': {\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n    pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n    greedy: true,\n    inside: {\n      'function': /^env/,\n      'operator': /^:/,\n      'variable': /[\\s\\S]+/\n    }\n  },\n  'hash': {\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n    pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n    inside: {\n      'function': /sha256/,\n      'operator': /:/,\n      'number': /[\\da-fA-F]{64}/\n    }\n  },\n  // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n  'keyword': /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n  'builtin': /\\b(?:Some|None)\\b/,\n  'boolean': /\\b(?:False|True)\\b/,\n  'number': /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n  'operator': /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n  'punctuation': /\\.\\.|[{}\\[\\](),./]/,\n  // we'll just assume that every capital word left is a type name\n  'class-name': /\\b[A-Z]\\w*\\b/\n};\nPrism.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism.languages.dhall;","map":{"version":3,"names":["Prism","languages","dhall","pattern","greedy","inside","lookbehind","alias","string","interpolation","expression"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-dhall.js"],"sourcesContent":["// ABNF grammar:\r\n// https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\r\n\r\nPrism.languages.dhall = {\r\n\t// Multi-line comments can be nested. E.g. {- foo {- bar -} -}\r\n\t// The multi-line pattern is essentially this:\r\n\t//   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\r\n\t'comment': /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\r\n\t'string': {\r\n\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /\\$\\{[^{}]*\\}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'expression': {\r\n\t\t\t\t\t\tpattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\r\n\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\talias: 'language-dhall',\r\n\t\t\t\t\t\tinside: null // see blow\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'punctuation': /\\$\\{|\\}/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'label': {\r\n\t\tpattern: /`[^`]*`/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'url': {\r\n\t\t// https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\r\n\t\tpattern: /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'env': {\r\n\t\t// https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\r\n\t\tpattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'function': /^env/,\r\n\t\t\t'operator': /^:/,\r\n\t\t\t'variable': /[\\s\\S]+/\r\n\t\t}\r\n\t},\r\n\t'hash': {\r\n\t\t// https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\r\n\t\tpattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\r\n\t\tinside: {\r\n\t\t\t'function': /sha256/,\r\n\t\t\t'operator': /:/,\r\n\t\t\t'number': /[\\da-fA-F]{64}/\r\n\t\t}\r\n\t},\r\n\r\n\t// https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\r\n\t'keyword': /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\r\n\t'builtin': /\\b(?:Some|None)\\b/,\r\n\r\n\t'boolean': /\\b(?:False|True)\\b/,\r\n\t'number': /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\r\n\t'operator': /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\r\n\t'punctuation': /\\.\\.|[{}\\[\\](),./]/,\r\n\r\n\t// we'll just assume that every capital word left is a type name\r\n\t'class-name': /\\b[A-Z]\\w*\\b/\r\n};\r\n\r\nPrism.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism.languages.dhall;\r\n"],"mappings":"AAAA;AACA;;AAEAA,KAAK,CAACC,SAAS,CAACC,KAAK,GAAG;EACvB;EACA;EACA;EACA,SAAS,EAAE,wEAAwE;EACnF,QAAQ,EAAE;IACTC,OAAO,EAAE,2DAA2D;IACpEC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;MACP,eAAe,EAAE;QAChBF,OAAO,EAAE,cAAc;QACvBE,MAAM,EAAE;UACP,YAAY,EAAE;YACbF,OAAO,EAAE,uBAAuB;YAChCG,UAAU,EAAE,IAAI;YAChBC,KAAK,EAAE,gBAAgB;YACvBF,MAAM,EAAE,IAAI,CAAC;UACd,CAAC;;UACD,aAAa,EAAE;QAChB;MACD;IACD;EACD,CAAC;EACD,OAAO,EAAE;IACRF,OAAO,EAAE,SAAS;IAClBC,MAAM,EAAE;EACT,CAAC;EACD,KAAK,EAAE;IACN;IACAD,OAAO,EAAE,wFAAwF;IACjGC,MAAM,EAAE;EACT,CAAC;EACD,KAAK,EAAE;IACN;IACAD,OAAO,EAAE,wCAAwC;IACjDC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;MACP,UAAU,EAAE,MAAM;MAClB,UAAU,EAAE,IAAI;MAChB,UAAU,EAAE;IACb;EACD,CAAC;EACD,MAAM,EAAE;IACP;IACAF,OAAO,EAAE,2BAA2B;IACpCE,MAAM,EAAE;MACP,UAAU,EAAE,QAAQ;MACpB,UAAU,EAAE,GAAG;MACf,QAAQ,EAAE;IACX;EACD,CAAC;EAED;EACA,SAAS,EAAE,oFAAoF;EAC/F,SAAS,EAAE,mBAAmB;EAE9B,SAAS,EAAE,oBAAoB;EAC/B,QAAQ,EAAE,+EAA+E;EACzF,UAAU,EAAE,oGAAoG;EAChH,aAAa,EAAE,oBAAoB;EAEnC;EACA,YAAY,EAAE;AACf,CAAC;AAEDL,KAAK,CAACC,SAAS,CAACC,KAAK,CAACM,MAAM,CAACH,MAAM,CAACI,aAAa,CAACJ,MAAM,CAACK,UAAU,CAACL,MAAM,GAAGL,KAAK,CAACC,SAAS,CAACC,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}