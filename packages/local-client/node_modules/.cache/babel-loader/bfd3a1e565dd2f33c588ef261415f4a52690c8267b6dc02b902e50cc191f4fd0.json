{"ast":null,"code":"'use strict';\n\nvar syntax = require('micromark-extension-gfm');\nvar fromMarkdown = require('mdast-util-gfm/from-markdown');\nvar toMarkdown = require('mdast-util-gfm/to-markdown');\nvar warningIssued;\nmodule.exports = gfm;\nfunction gfm(options) {\n  var data = this.data();\n\n  /* istanbul ignore next - old remark. */\n  if (!warningIssued && (this.Parser && this.Parser.prototype && this.Parser.prototype.blockTokenizers || this.Compiler && this.Compiler.prototype && this.Compiler.prototype.visitors)) {\n    warningIssued = true;\n    console.warn('[remark-gfm] Warning: please upgrade to remark 13 to use this plugin');\n  }\n  add('micromarkExtensions', syntax(options));\n  add('fromMarkdownExtensions', fromMarkdown);\n  add('toMarkdownExtensions', toMarkdown(options));\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value);else data[field] = [value];\n  }\n}","map":{"version":3,"names":["syntax","require","fromMarkdown","toMarkdown","warningIssued","module","exports","gfm","options","data","Parser","prototype","blockTokenizers","Compiler","visitors","console","warn","add","field","value","push"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/remark-gfm/index.js"],"sourcesContent":["'use strict'\r\n\r\nvar syntax = require('micromark-extension-gfm')\r\nvar fromMarkdown = require('mdast-util-gfm/from-markdown')\r\nvar toMarkdown = require('mdast-util-gfm/to-markdown')\r\n\r\nvar warningIssued\r\n\r\nmodule.exports = gfm\r\n\r\nfunction gfm(options) {\r\n  var data = this.data()\r\n\r\n  /* istanbul ignore next - old remark. */\r\n  if (\r\n    !warningIssued &&\r\n    ((this.Parser &&\r\n      this.Parser.prototype &&\r\n      this.Parser.prototype.blockTokenizers) ||\r\n      (this.Compiler &&\r\n        this.Compiler.prototype &&\r\n        this.Compiler.prototype.visitors))\r\n  ) {\r\n    warningIssued = true\r\n    console.warn(\r\n      '[remark-gfm] Warning: please upgrade to remark 13 to use this plugin'\r\n    )\r\n  }\r\n\r\n  add('micromarkExtensions', syntax(options))\r\n  add('fromMarkdownExtensions', fromMarkdown)\r\n  add('toMarkdownExtensions', toMarkdown(options))\r\n\r\n  function add(field, value) {\r\n    /* istanbul ignore if - other extensions. */\r\n    if (data[field]) data[field].push(value)\r\n    else data[field] = [value]\r\n  }\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAC/C,IAAIC,YAAY,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AAC1D,IAAIE,UAAU,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAEtD,IAAIG,aAAa;AAEjBC,MAAM,CAACC,OAAO,GAAGC,GAAG;AAEpB,SAASA,GAAGA,CAACC,OAAO,EAAE;EACpB,IAAIC,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;;EAEtB;EACA,IACE,CAACL,aAAa,KACZ,IAAI,CAACM,MAAM,IACX,IAAI,CAACA,MAAM,CAACC,SAAS,IACrB,IAAI,CAACD,MAAM,CAACC,SAAS,CAACC,eAAe,IACpC,IAAI,CAACC,QAAQ,IACZ,IAAI,CAACA,QAAQ,CAACF,SAAS,IACvB,IAAI,CAACE,QAAQ,CAACF,SAAS,CAACG,QAAS,CAAC,EACtC;IACAV,aAAa,GAAG,IAAI;IACpBW,OAAO,CAACC,IAAI,CACV,sEAAsE,CACvE;EACH;EAEAC,GAAG,CAAC,qBAAqB,EAAEjB,MAAM,CAACQ,OAAO,CAAC,CAAC;EAC3CS,GAAG,CAAC,wBAAwB,EAAEf,YAAY,CAAC;EAC3Ce,GAAG,CAAC,sBAAsB,EAAEd,UAAU,CAACK,OAAO,CAAC,CAAC;EAEhD,SAASS,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACzB;IACA,IAAIV,IAAI,CAACS,KAAK,CAAC,EAAET,IAAI,CAACS,KAAK,CAAC,CAACE,IAAI,CAACD,KAAK,CAAC,MACnCV,IAAI,CAACS,KAAK,CAAC,GAAG,CAACC,KAAK,CAAC;EAC5B;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}