{"ast":null,"code":"import { ActionType } from '../action-types';\nimport { saveCells } from '../action-creators';\nexport const persistMiddleware = _ref => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  return next => {\n    return action => {\n      next(action);\n      if ([ActionType.MOVE_CELL, ActionType.UPDATE_CELL, ActionType.INSERT_CELL_AFTER, ActionType.DELETE_CELL].includes(action.type)) {\n        saveCells()(dispatch, getState);\n      }\n    };\n  };\n};","map":{"version":3,"names":["ActionType","saveCells","persistMiddleware","_ref","dispatch","getState","next","action","MOVE_CELL","UPDATE_CELL","INSERT_CELL_AFTER","DELETE_CELL","includes","type"],"sources":["C:/Users/weraj/OneDrive/Pulpit/ACS/SEM VI/Advanced web techno/pokodowane/packages/local-client/src/state/middlewares/persist-middleware.ts"],"sourcesContent":["import { Dispatch } from 'redux';\r\nimport { Action } from '../actions';\r\nimport { ActionType } from '../action-types';\r\nimport { saveCells } from '../action-creators';\r\nimport { RootState } from '../reducers';\r\n\r\nexport const persistMiddleware = ({\r\n  dispatch,\r\n  getState,\r\n}: {\r\n  dispatch: Dispatch<Action>;\r\n  getState: () => RootState;\r\n}) => {\r\n  return (next: (action: Action) => void) => {\r\n    return (action: Action) => {\r\n      next(action);\r\n\r\n      if (\r\n        [\r\n          ActionType.MOVE_CELL,\r\n          ActionType.UPDATE_CELL,\r\n          ActionType.INSERT_CELL_AFTER,\r\n          ActionType.DELETE_CELL,\r\n        ].includes(action.type)\r\n      ) {\r\n        saveCells()(dispatch, getState);\r\n      }\r\n    };\r\n  };\r\n};\r\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,oBAAoB;AAG9C,OAAO,MAAMC,iBAAiB,GAAGC,IAAA,IAM3B;EAAA,IAN4B;IAChCC,QAAQ;IACRC;EAIF,CAAC,GAAAF,IAAA;EACC,OAAQG,IAA8B,IAAK;IACzC,OAAQC,MAAc,IAAK;MACzBD,IAAI,CAACC,MAAM,CAAC;MAEZ,IACE,CACEP,UAAU,CAACQ,SAAS,EACpBR,UAAU,CAACS,WAAW,EACtBT,UAAU,CAACU,iBAAiB,EAC5BV,UAAU,CAACW,WAAW,CACvB,CAACC,QAAQ,CAACL,MAAM,CAACM,IAAI,CAAC,EACvB;QACAZ,SAAS,EAAE,CAACG,QAAQ,EAAEC,QAAQ,CAAC;MACjC;IACF,CAAC;EACH,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}