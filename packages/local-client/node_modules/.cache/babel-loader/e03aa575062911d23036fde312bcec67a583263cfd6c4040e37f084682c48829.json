{"ast":null,"code":"(function (Prism) {\n  var keywords = [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extension|external|extends|factory|final|finally|for|get|hide|if|implements|interface|import|in|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/];\n\n  // Handles named imports, such as http.Client\n  var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n  // based on the dart naming conventions\n  var className = {\n    pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n    lookbehind: true,\n    inside: {\n      'namespace': {\n        pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n        inside: {\n          'punctuation': /\\./\n        }\n      }\n    }\n  };\n  Prism.languages.dart = Prism.languages.extend('clike', {\n    'string': [{\n      pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n      greedy: true\n    }, {\n      pattern: /r?([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    }],\n    'class-name': [className, {\n      // variables and parameters\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      pattern: RegExp(packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\n      lookbehind: true,\n      inside: className.inside\n    }],\n    'keyword': keywords,\n    'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n  });\n  Prism.languages.insertBefore('dart', 'function', {\n    'metadata': {\n      pattern: /@\\w+/,\n      alias: 'symbol'\n    }\n  });\n  Prism.languages.insertBefore('dart', 'class-name', {\n    'generics': {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    }\n  });\n})(Prism);","map":{"version":3,"names":["Prism","keywords","packagePrefix","source","className","pattern","RegExp","lookbehind","inside","languages","dart","extend","greedy","insertBefore","alias"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/prismjs/components/prism-dart.js"],"sourcesContent":["(function (Prism) {\r\n\tvar keywords = [\r\n\t\t/\\b(?:async|sync|yield)\\*/,\r\n\t\t/\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extension|external|extends|factory|final|finally|for|get|hide|if|implements|interface|import|in|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\r\n\t];\r\n\r\n\t// Handles named imports, such as http.Client\r\n\tvar packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\r\n\r\n\t// based on the dart naming conventions\r\n\tvar className = {\r\n\t\tpattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'namespace': {\r\n\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /\\./\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t};\r\n\r\n\tPrism.languages.dart = Prism.languages.extend('clike', {\r\n\t\t'string': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\r\n\t\t\t\tgreedy: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /r?([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\t\t\tgreedy: true\r\n\t\t\t}\r\n\t\t],\r\n\t\t'class-name': [\r\n\t\t\tclassName,\r\n\t\t\t{\r\n\t\t\t\t// variables and parameters\r\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\r\n\t\t\t\tpattern: RegExp(packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: className.inside\r\n\t\t\t}\r\n\t\t],\r\n\t\t'keyword': keywords,\r\n\t\t'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('dart', 'function', {\r\n\t\t'metadata': {\r\n\t\t\tpattern: /@\\w+/,\r\n\t\t\talias: 'symbol'\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('dart', 'class-name', {\r\n\t\t'generics': {\r\n\t\t\tpattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\r\n\t\t\tinside: {\r\n\t\t\t\t'class-name': className,\r\n\t\t\t\t'keyword': keywords,\r\n\t\t\t\t'punctuation': /[<>(),.:]/,\r\n\t\t\t\t'operator': /[?&|]/\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n}(Prism));\r\n"],"mappings":"AAAC,WAAUA,KAAK,EAAE;EACjB,IAAIC,QAAQ,GAAG,CACd,0BAA0B,EAC1B,4WAA4W,CAC5W;;EAED;EACA,IAAIC,aAAa,GAAG,sDAAsD,CAACC,MAAM;;EAEjF;EACA,IAAIC,SAAS,GAAG;IACfC,OAAO,EAAEC,MAAM,CAACJ,aAAa,GAAG,+BAA+B,CAACC,MAAM,CAAC;IACvEI,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACP,WAAW,EAAE;QACZH,OAAO,EAAE,0CAA0C;QACnDG,MAAM,EAAE;UACP,aAAa,EAAE;QAChB;MACD;IACD;EACD,CAAC;EAEDR,KAAK,CAACS,SAAS,CAACC,IAAI,GAAGV,KAAK,CAACS,SAAS,CAACE,MAAM,CAAC,OAAO,EAAE;IACtD,QAAQ,EAAE,CACT;MACCN,OAAO,EAAE,uBAAuB;MAChCO,MAAM,EAAE;IACT,CAAC,EACD;MACCP,OAAO,EAAE,oCAAoC;MAC7CO,MAAM,EAAE;IACT,CAAC,CACD;IACD,YAAY,EAAE,CACbR,SAAS,EACT;MACC;MACA;MACAC,OAAO,EAAEC,MAAM,CAACJ,aAAa,GAAG,8BAA8B,CAACC,MAAM,CAAC;MACtEI,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAEJ,SAAS,CAACI;IACnB,CAAC,CACD;IACD,SAAS,EAAEP,QAAQ;IACnB,UAAU,EAAE;EACb,CAAC,CAAC;EAEFD,KAAK,CAACS,SAAS,CAACI,YAAY,CAAC,MAAM,EAAE,UAAU,EAAE;IAChD,UAAU,EAAE;MACXR,OAAO,EAAE,MAAM;MACfS,KAAK,EAAE;IACR;EACD,CAAC,CAAC;EAEFd,KAAK,CAACS,SAAS,CAACI,YAAY,CAAC,MAAM,EAAE,YAAY,EAAE;IAClD,UAAU,EAAE;MACXR,OAAO,EAAE,qEAAqE;MAC9EG,MAAM,EAAE;QACP,YAAY,EAAEJ,SAAS;QACvB,SAAS,EAAEH,QAAQ;QACnB,aAAa,EAAE,WAAW;QAC1B,UAAU,EAAE;MACb;IACD;EACD,CAAC,CAAC;AACH,CAAC,EAACD,KAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}