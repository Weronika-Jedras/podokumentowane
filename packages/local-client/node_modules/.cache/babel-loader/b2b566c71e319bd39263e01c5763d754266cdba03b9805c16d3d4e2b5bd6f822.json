{"ast":null,"code":"var ccount = require('ccount');\nvar findAndReplace = require('mdast-util-find-and-replace');\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation');\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace');\nexports.transforms = [transformGfmAutolinkLiterals];\nexports.enter = {\n  literalAutolink: enterLiteralAutolink,\n  literalAutolinkEmail: enterLiteralAutolinkValue,\n  literalAutolinkHttp: enterLiteralAutolinkValue,\n  literalAutolinkWww: enterLiteralAutolinkValue\n};\nexports.exit = {\n  literalAutolink: exitLiteralAutolink,\n  literalAutolinkEmail: exitLiteralAutolinkEmail,\n  literalAutolinkHttp: exitLiteralAutolinkHttp,\n  literalAutolinkWww: exitLiteralAutolinkWww\n};\nfunction enterLiteralAutolink(token) {\n  this.enter({\n    type: 'link',\n    title: null,\n    url: '',\n    children: []\n  }, token);\n}\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token);\n}\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token);\n}\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token);\n  this.stack[this.stack.length - 1].url = 'http://' + this.sliceSerialize(token);\n}\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token);\n}\nfunction exitLiteralAutolink(token) {\n  this.exit(token);\n}\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(tree, [[/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/i, findUrl], [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/, findEmail]], {\n    ignore: ['link', 'linkReference']\n  });\n}\nfunction findUrl($0, protocol, domain, path, match) {\n  var prefix = '';\n  var parts;\n  var result;\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false;\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain;\n    protocol = '';\n    prefix = 'http://';\n  }\n  if (!isCorrectDomain(domain)) {\n    return false;\n  }\n  parts = splitUrl(domain + path);\n  if (!parts[0]) return false;\n  result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{\n      type: 'text',\n      value: protocol + parts[0]\n    }]\n  };\n  if (parts[1]) {\n    result = [result, {\n      type: 'text',\n      value: parts[1]\n    }];\n  }\n  return result;\n}\nfunction findEmail($0, atext, label, match) {\n  // Not an expected previous character.\n  if (!previous(match, true) || /[_-]$/.test(label)) {\n    return false;\n  }\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{\n      type: 'text',\n      value: atext + '@' + label\n    }]\n  };\n}\nfunction isCorrectDomain(domain) {\n  var parts = domain.split('.');\n  if (parts.length < 2 || parts[parts.length - 1] && (/_/.test(parts[parts.length - 1]) || !/[a-zA-Z\\d]/.test(parts[parts.length - 1])) || parts[parts.length - 2] && (/_/.test(parts[parts.length - 2]) || !/[a-zA-Z\\d]/.test(parts[parts.length - 2]))) {\n    return false;\n  }\n  return true;\n}\nfunction splitUrl(url) {\n  var trail = /[!\"&'),.:;<>?\\]}]+$/.exec(url);\n  var closingParenIndex;\n  var openingParens;\n  var closingParens;\n  if (trail) {\n    url = url.slice(0, trail.index);\n    trail = trail[0];\n    closingParenIndex = trail.indexOf(')');\n    openingParens = ccount(url, '(');\n    closingParens = ccount(url, ')');\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1);\n      trail = trail.slice(closingParenIndex + 1);\n      closingParenIndex = trail.indexOf(')');\n      closingParens++;\n    }\n  }\n  return [url, trail];\n}\nfunction previous(match, email) {\n  var code = match.input.charCodeAt(match.index - 1);\n  return (code !== code || unicodeWhitespace(code) || unicodePunctuation(code)) && (!email || code !== 47);\n}","map":{"version":3,"names":["ccount","require","findAndReplace","unicodePunctuation","unicodeWhitespace","exports","transforms","transformGfmAutolinkLiterals","enter","literalAutolink","enterLiteralAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","exit","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","token","type","title","url","children","config","autolinkProtocol","call","data","stack","length","sliceSerialize","autolinkEmail","tree","findUrl","findEmail","ignore","$0","protocol","domain","path","match","prefix","parts","result","previous","test","isCorrectDomain","splitUrl","value","atext","label","split","trail","exec","closingParenIndex","openingParens","closingParens","slice","index","indexOf","email","code","input","charCodeAt"],"sources":["C:/Users/Maya/Desktop/AWT/podokumentowane/podokumentowane/packages/local-client/node_modules/mdast-util-gfm-autolink-literal/from-markdown.js"],"sourcesContent":["var ccount = require('ccount')\r\nvar findAndReplace = require('mdast-util-find-and-replace')\r\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\r\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\r\n\r\nexports.transforms = [transformGfmAutolinkLiterals]\r\nexports.enter = {\r\n  literalAutolink: enterLiteralAutolink,\r\n  literalAutolinkEmail: enterLiteralAutolinkValue,\r\n  literalAutolinkHttp: enterLiteralAutolinkValue,\r\n  literalAutolinkWww: enterLiteralAutolinkValue\r\n}\r\nexports.exit = {\r\n  literalAutolink: exitLiteralAutolink,\r\n  literalAutolinkEmail: exitLiteralAutolinkEmail,\r\n  literalAutolinkHttp: exitLiteralAutolinkHttp,\r\n  literalAutolinkWww: exitLiteralAutolinkWww\r\n}\r\n\r\nfunction enterLiteralAutolink(token) {\r\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\r\n}\r\n\r\nfunction enterLiteralAutolinkValue(token) {\r\n  this.config.enter.autolinkProtocol.call(this, token)\r\n}\r\n\r\nfunction exitLiteralAutolinkHttp(token) {\r\n  this.config.exit.autolinkProtocol.call(this, token)\r\n}\r\n\r\nfunction exitLiteralAutolinkWww(token) {\r\n  this.config.exit.data.call(this, token)\r\n  this.stack[this.stack.length - 1].url = 'http://' + this.sliceSerialize(token)\r\n}\r\n\r\nfunction exitLiteralAutolinkEmail(token) {\r\n  this.config.exit.autolinkEmail.call(this, token)\r\n}\r\n\r\nfunction exitLiteralAutolink(token) {\r\n  this.exit(token)\r\n}\r\n\r\nfunction transformGfmAutolinkLiterals(tree) {\r\n  findAndReplace(\r\n    tree,\r\n    [\r\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/i, findUrl],\r\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/, findEmail]\r\n    ],\r\n    {ignore: ['link', 'linkReference']}\r\n  )\r\n}\r\n\r\nfunction findUrl($0, protocol, domain, path, match) {\r\n  var prefix = ''\r\n  var parts\r\n  var result\r\n\r\n  // Not an expected previous character.\r\n  if (!previous(match)) {\r\n    return false\r\n  }\r\n\r\n  // Treat `www` as part of the domain.\r\n  if (/^w/i.test(protocol)) {\r\n    domain = protocol + domain\r\n    protocol = ''\r\n    prefix = 'http://'\r\n  }\r\n\r\n  if (!isCorrectDomain(domain)) {\r\n    return false\r\n  }\r\n\r\n  parts = splitUrl(domain + path)\r\n\r\n  if (!parts[0]) return false\r\n\r\n  result = {\r\n    type: 'link',\r\n    title: null,\r\n    url: prefix + protocol + parts[0],\r\n    children: [{type: 'text', value: protocol + parts[0]}]\r\n  }\r\n\r\n  if (parts[1]) {\r\n    result = [result, {type: 'text', value: parts[1]}]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction findEmail($0, atext, label, match) {\r\n  // Not an expected previous character.\r\n  if (!previous(match, true) || /[_-]$/.test(label)) {\r\n    return false\r\n  }\r\n\r\n  return {\r\n    type: 'link',\r\n    title: null,\r\n    url: 'mailto:' + atext + '@' + label,\r\n    children: [{type: 'text', value: atext + '@' + label}]\r\n  }\r\n}\r\n\r\nfunction isCorrectDomain(domain) {\r\n  var parts = domain.split('.')\r\n\r\n  if (\r\n    parts.length < 2 ||\r\n    (parts[parts.length - 1] &&\r\n      (/_/.test(parts[parts.length - 1]) ||\r\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\r\n    (parts[parts.length - 2] &&\r\n      (/_/.test(parts[parts.length - 2]) ||\r\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nfunction splitUrl(url) {\r\n  var trail = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\r\n  var closingParenIndex\r\n  var openingParens\r\n  var closingParens\r\n\r\n  if (trail) {\r\n    url = url.slice(0, trail.index)\r\n    trail = trail[0]\r\n    closingParenIndex = trail.indexOf(')')\r\n    openingParens = ccount(url, '(')\r\n    closingParens = ccount(url, ')')\r\n\r\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\r\n      url += trail.slice(0, closingParenIndex + 1)\r\n      trail = trail.slice(closingParenIndex + 1)\r\n      closingParenIndex = trail.indexOf(')')\r\n      closingParens++\r\n    }\r\n  }\r\n\r\n  return [url, trail]\r\n}\r\n\r\nfunction previous(match, email) {\r\n  var code = match.input.charCodeAt(match.index - 1)\r\n  return (\r\n    (code !== code || unicodeWhitespace(code) || unicodePunctuation(code)) &&\r\n    (!email || code !== 47)\r\n  )\r\n}\r\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIC,cAAc,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAC3D,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,8CAA8C,CAAC;AAChF,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,6CAA6C,CAAC;AAE9EI,OAAO,CAACC,UAAU,GAAG,CAACC,4BAA4B,CAAC;AACnDF,OAAO,CAACG,KAAK,GAAG;EACdC,eAAe,EAAEC,oBAAoB;EACrCC,oBAAoB,EAAEC,yBAAyB;EAC/CC,mBAAmB,EAAED,yBAAyB;EAC9CE,kBAAkB,EAAEF;AACtB,CAAC;AACDP,OAAO,CAACU,IAAI,GAAG;EACbN,eAAe,EAAEO,mBAAmB;EACpCL,oBAAoB,EAAEM,wBAAwB;EAC9CJ,mBAAmB,EAAEK,uBAAuB;EAC5CJ,kBAAkB,EAAEK;AACtB,CAAC;AAED,SAAST,oBAAoBA,CAACU,KAAK,EAAE;EACnC,IAAI,CAACZ,KAAK,CAAC;IAACa,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,IAAI;IAAEC,GAAG,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,EAAEJ,KAAK,CAAC;AACvE;AAEA,SAASR,yBAAyBA,CAACQ,KAAK,EAAE;EACxC,IAAI,CAACK,MAAM,CAACjB,KAAK,CAACkB,gBAAgB,CAACC,IAAI,CAAC,IAAI,EAAEP,KAAK,CAAC;AACtD;AAEA,SAASF,uBAAuBA,CAACE,KAAK,EAAE;EACtC,IAAI,CAACK,MAAM,CAACV,IAAI,CAACW,gBAAgB,CAACC,IAAI,CAAC,IAAI,EAAEP,KAAK,CAAC;AACrD;AAEA,SAASD,sBAAsBA,CAACC,KAAK,EAAE;EACrC,IAAI,CAACK,MAAM,CAACV,IAAI,CAACa,IAAI,CAACD,IAAI,CAAC,IAAI,EAAEP,KAAK,CAAC;EACvC,IAAI,CAACS,KAAK,CAAC,IAAI,CAACA,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,CAACP,GAAG,GAAG,SAAS,GAAG,IAAI,CAACQ,cAAc,CAACX,KAAK,CAAC;AAChF;AAEA,SAASH,wBAAwBA,CAACG,KAAK,EAAE;EACvC,IAAI,CAACK,MAAM,CAACV,IAAI,CAACiB,aAAa,CAACL,IAAI,CAAC,IAAI,EAAEP,KAAK,CAAC;AAClD;AAEA,SAASJ,mBAAmBA,CAACI,KAAK,EAAE;EAClC,IAAI,CAACL,IAAI,CAACK,KAAK,CAAC;AAClB;AAEA,SAASb,4BAA4BA,CAAC0B,IAAI,EAAE;EAC1C/B,cAAc,CACZ+B,IAAI,EACJ,CACE,CAAC,gDAAgD,EAAEC,OAAO,CAAC,EAC3D,CAAC,kCAAkC,EAAEC,SAAS,CAAC,CAChD,EACD;IAACC,MAAM,EAAE,CAAC,MAAM,EAAE,eAAe;EAAC,CAAC,CACpC;AACH;AAEA,SAASF,OAAOA,CAACG,EAAE,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE;EAClD,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,KAAK;EACT,IAAIC,MAAM;;EAEV;EACA,IAAI,CAACC,QAAQ,CAACJ,KAAK,CAAC,EAAE;IACpB,OAAO,KAAK;EACd;;EAEA;EACA,IAAI,KAAK,CAACK,IAAI,CAACR,QAAQ,CAAC,EAAE;IACxBC,MAAM,GAAGD,QAAQ,GAAGC,MAAM;IAC1BD,QAAQ,GAAG,EAAE;IACbI,MAAM,GAAG,SAAS;EACpB;EAEA,IAAI,CAACK,eAAe,CAACR,MAAM,CAAC,EAAE;IAC5B,OAAO,KAAK;EACd;EAEAI,KAAK,GAAGK,QAAQ,CAACT,MAAM,GAAGC,IAAI,CAAC;EAE/B,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK;EAE3BC,MAAM,GAAG;IACPvB,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,IAAI;IACXC,GAAG,EAAEmB,MAAM,GAAGJ,QAAQ,GAAGK,KAAK,CAAC,CAAC,CAAC;IACjCnB,QAAQ,EAAE,CAAC;MAACH,IAAI,EAAE,MAAM;MAAE4B,KAAK,EAAEX,QAAQ,GAAGK,KAAK,CAAC,CAAC;IAAC,CAAC;EACvD,CAAC;EAED,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IACZC,MAAM,GAAG,CAACA,MAAM,EAAE;MAACvB,IAAI,EAAE,MAAM;MAAE4B,KAAK,EAAEN,KAAK,CAAC,CAAC;IAAC,CAAC,CAAC;EACpD;EAEA,OAAOC,MAAM;AACf;AAEA,SAAST,SAASA,CAACE,EAAE,EAAEa,KAAK,EAAEC,KAAK,EAAEV,KAAK,EAAE;EAC1C;EACA,IAAI,CAACI,QAAQ,CAACJ,KAAK,EAAE,IAAI,CAAC,IAAI,OAAO,CAACK,IAAI,CAACK,KAAK,CAAC,EAAE;IACjD,OAAO,KAAK;EACd;EAEA,OAAO;IACL9B,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,IAAI;IACXC,GAAG,EAAE,SAAS,GAAG2B,KAAK,GAAG,GAAG,GAAGC,KAAK;IACpC3B,QAAQ,EAAE,CAAC;MAACH,IAAI,EAAE,MAAM;MAAE4B,KAAK,EAAEC,KAAK,GAAG,GAAG,GAAGC;IAAK,CAAC;EACvD,CAAC;AACH;AAEA,SAASJ,eAAeA,CAACR,MAAM,EAAE;EAC/B,IAAII,KAAK,GAAGJ,MAAM,CAACa,KAAK,CAAC,GAAG,CAAC;EAE7B,IACET,KAAK,CAACb,MAAM,GAAG,CAAC,IACfa,KAAK,CAACA,KAAK,CAACb,MAAM,GAAG,CAAC,CAAC,KACrB,GAAG,CAACgB,IAAI,CAACH,KAAK,CAACA,KAAK,CAACb,MAAM,GAAG,CAAC,CAAC,CAAC,IAChC,CAAC,YAAY,CAACgB,IAAI,CAACH,KAAK,CAACA,KAAK,CAACb,MAAM,GAAG,CAAC,CAAC,CAAC,CAAE,IAChDa,KAAK,CAACA,KAAK,CAACb,MAAM,GAAG,CAAC,CAAC,KACrB,GAAG,CAACgB,IAAI,CAACH,KAAK,CAACA,KAAK,CAACb,MAAM,GAAG,CAAC,CAAC,CAAC,IAChC,CAAC,YAAY,CAACgB,IAAI,CAACH,KAAK,CAACA,KAAK,CAACb,MAAM,GAAG,CAAC,CAAC,CAAC,CAAE,EACjD;IACA,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb;AAEA,SAASkB,QAAQA,CAACzB,GAAG,EAAE;EACrB,IAAI8B,KAAK,GAAG,qBAAqB,CAACC,IAAI,CAAC/B,GAAG,CAAC;EAC3C,IAAIgC,iBAAiB;EACrB,IAAIC,aAAa;EACjB,IAAIC,aAAa;EAEjB,IAAIJ,KAAK,EAAE;IACT9B,GAAG,GAAGA,GAAG,CAACmC,KAAK,CAAC,CAAC,EAAEL,KAAK,CAACM,KAAK,CAAC;IAC/BN,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC;IAChBE,iBAAiB,GAAGF,KAAK,CAACO,OAAO,CAAC,GAAG,CAAC;IACtCJ,aAAa,GAAGxD,MAAM,CAACuB,GAAG,EAAE,GAAG,CAAC;IAChCkC,aAAa,GAAGzD,MAAM,CAACuB,GAAG,EAAE,GAAG,CAAC;IAEhC,OAAOgC,iBAAiB,KAAK,CAAC,CAAC,IAAIC,aAAa,GAAGC,aAAa,EAAE;MAChElC,GAAG,IAAI8B,KAAK,CAACK,KAAK,CAAC,CAAC,EAAEH,iBAAiB,GAAG,CAAC,CAAC;MAC5CF,KAAK,GAAGA,KAAK,CAACK,KAAK,CAACH,iBAAiB,GAAG,CAAC,CAAC;MAC1CA,iBAAiB,GAAGF,KAAK,CAACO,OAAO,CAAC,GAAG,CAAC;MACtCH,aAAa,EAAE;IACjB;EACF;EAEA,OAAO,CAAClC,GAAG,EAAE8B,KAAK,CAAC;AACrB;AAEA,SAASR,QAAQA,CAACJ,KAAK,EAAEoB,KAAK,EAAE;EAC9B,IAAIC,IAAI,GAAGrB,KAAK,CAACsB,KAAK,CAACC,UAAU,CAACvB,KAAK,CAACkB,KAAK,GAAG,CAAC,CAAC;EAClD,OACE,CAACG,IAAI,KAAKA,IAAI,IAAI1D,iBAAiB,CAAC0D,IAAI,CAAC,IAAI3D,kBAAkB,CAAC2D,IAAI,CAAC,MACpE,CAACD,KAAK,IAAIC,IAAI,KAAK,EAAE,CAAC;AAE3B"},"metadata":{},"sourceType":"script","externalDependencies":[]}